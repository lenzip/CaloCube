//
// File generated by rootcint at Sun Jul  7 15:55:17 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME CaloCubeDictionary
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "CaloCubeDictionary.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      namespace CLHEP {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::CLHEP::Hep3Vector Hep3Vector;
      #else
      class Hep3Vector  {
         public:
         //friend XX;
         double dx; //
         double dy; //
         double dz; //
      };
      #endif
      } 
      namespace CaloCube {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::CaloCube::Position Position;
      #else
      class Position  {
         public:
         //friend XX;
         int _x; //
         int _y; //
         int _z; //
      };
      #endif
      } 
      namespace CaloCube {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::CaloCube::Particle Particle;
      #else
      class Particle  {
         public:
         //friend XX;
         string _name; //
         string _creatorProcess; //
         double _totalEnergy; //
         ::CLHEP::Hep3Vector _momentum; //
         ::CaloCube::Position _pos; //
         :: G4Track* _track; //! transient value
      };
      #endif
      } 
      namespace CaloCube {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::CaloCube::Exception Exception;
      #else
      class Exception  :  public ::exception {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~Exception() throw() {};
         string _cathegory; //
         string message; //
      };
      #endif
      } 
      namespace CaloCube {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::CaloCube::GlobalEvent GlobalEvent;
      #else
      class GlobalEvent  {
         public:
         //friend XX;
      };
      #endif
      } 
      namespace CaloCube {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::CaloCube::Crystal Crystal;
      #else
      class Crystal  {
         public:
         //friend XX;
         ::CaloCube::Position _pos; //
         string _material; //
         double _totalEnergy; //
         vector< pair< ::CaloCube::Ref< ::CaloCube::Particle >, double >  > _allParticlesOriginatingHere; //
         vector< pair< ::CaloCube::Ref< ::CaloCube::Particle >, double >  > _allParticlesPassingHere; //
         vector< pair< ::CaloCube::Ref< ::CaloCube::Particle >, double >  > _allPiOOriginatingHere; //
      };
      #endif
      } 
      namespace CaloCube {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::CaloCube::Ref< ::CaloCube::Particle > ReflECaloCubecLcLParticlegR;
      #else
      class ReflECaloCubecLcLParticlegR  {
         public:
         //friend XX;
         string _treeName; //
         string _branchName; //
         unsigned int _index; //
      };
      #endif
      } 
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< ::CaloCube::Ref< ::CaloCube::Particle >, double > pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR;
      #else
      class pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR  {
         public:
         //friend XX;
         ::CaloCube::Ref< ::CaloCube::Particle > first; //
         double second; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace CLHEP {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void CLHEP_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("CLHEP", 0 /*version*/, "/home/lenzip/Documents/DREAM/GEANT4/install/bin/../include/Geant4/CLHEP/Vector/ThreeVector.icc", 13,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &CLHEP_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void CLHEP_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void CLHEPcLcLHep3Vector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void CLHEPcLcLHep3Vector_Dictionary();
   static void *new_CLHEPcLcLHep3Vector(void *p = 0);
   static void *newArray_CLHEPcLcLHep3Vector(Long_t size, void *p);
   static void delete_CLHEPcLcLHep3Vector(void *p);
   static void deleteArray_CLHEPcLcLHep3Vector(void *p);
   static void destruct_CLHEPcLcLHep3Vector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CLHEP::Hep3Vector*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::CLHEP::Hep3Vector) == sizeof(::ROOT::Shadow::CLHEP::Hep3Vector));
      ::CLHEP::Hep3Vector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::CLHEP::Hep3Vector),0);
      static ::ROOT::TGenericClassInfo 
         instance("CLHEP::Hep3Vector", "/home/lenzip/Documents/DREAM/GEANT4/install/bin/../include/Geant4/CLHEP/Vector/ThreeVector.h", 41,
                  typeid(::CLHEP::Hep3Vector), DefineBehavior(ptr, ptr),
                  &CLHEPcLcLHep3Vector_ShowMembers, &CLHEPcLcLHep3Vector_Dictionary, isa_proxy, 4,
                  sizeof(::CLHEP::Hep3Vector) );
      instance.SetNew(&new_CLHEPcLcLHep3Vector);
      instance.SetNewArray(&newArray_CLHEPcLcLHep3Vector);
      instance.SetDelete(&delete_CLHEPcLcLHep3Vector);
      instance.SetDeleteArray(&deleteArray_CLHEPcLcLHep3Vector);
      instance.SetDestructor(&destruct_CLHEPcLcLHep3Vector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CLHEP::Hep3Vector*)
   {
      return GenerateInitInstanceLocal((::CLHEP::Hep3Vector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CLHEP::Hep3Vector*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void CLHEPcLcLHep3Vector_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::CLHEP::Hep3Vector*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace CaloCube {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void CaloCube_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("CaloCube", 0 /*version*/, "./../include/Crystal.h", 11,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &CaloCube_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void CaloCube_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void CaloCubecLcLPosition_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void CaloCubecLcLPosition_Dictionary();
   static void *new_CaloCubecLcLPosition(void *p = 0);
   static void *newArray_CaloCubecLcLPosition(Long_t size, void *p);
   static void delete_CaloCubecLcLPosition(void *p);
   static void deleteArray_CaloCubecLcLPosition(void *p);
   static void destruct_CaloCubecLcLPosition(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CaloCube::Position*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::CaloCube::Position) == sizeof(::ROOT::Shadow::CaloCube::Position));
      ::CaloCube::Position *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::CaloCube::Position),0);
      static ::ROOT::TGenericClassInfo 
         instance("CaloCube::Position", "./../include/Position.h", 6,
                  typeid(::CaloCube::Position), DefineBehavior(ptr, ptr),
                  &CaloCubecLcLPosition_ShowMembers, &CaloCubecLcLPosition_Dictionary, isa_proxy, 4,
                  sizeof(::CaloCube::Position) );
      instance.SetNew(&new_CaloCubecLcLPosition);
      instance.SetNewArray(&newArray_CaloCubecLcLPosition);
      instance.SetDelete(&delete_CaloCubecLcLPosition);
      instance.SetDeleteArray(&deleteArray_CaloCubecLcLPosition);
      instance.SetDestructor(&destruct_CaloCubecLcLPosition);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CaloCube::Position*)
   {
      return GenerateInitInstanceLocal((::CaloCube::Position*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CaloCube::Position*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void CaloCubecLcLPosition_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::CaloCube::Position*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void CaloCubecLcLParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void CaloCubecLcLParticle_Dictionary();
   static void *new_CaloCubecLcLParticle(void *p = 0);
   static void *newArray_CaloCubecLcLParticle(Long_t size, void *p);
   static void delete_CaloCubecLcLParticle(void *p);
   static void deleteArray_CaloCubecLcLParticle(void *p);
   static void destruct_CaloCubecLcLParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CaloCube::Particle*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::CaloCube::Particle) == sizeof(::ROOT::Shadow::CaloCube::Particle));
      ::CaloCube::Particle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::CaloCube::Particle),0);
      static ::ROOT::TGenericClassInfo 
         instance("CaloCube::Particle", "./../include/Particle.h", 13,
                  typeid(::CaloCube::Particle), DefineBehavior(ptr, ptr),
                  &CaloCubecLcLParticle_ShowMembers, &CaloCubecLcLParticle_Dictionary, isa_proxy, 4,
                  sizeof(::CaloCube::Particle) );
      instance.SetNew(&new_CaloCubecLcLParticle);
      instance.SetNewArray(&newArray_CaloCubecLcLParticle);
      instance.SetDelete(&delete_CaloCubecLcLParticle);
      instance.SetDeleteArray(&deleteArray_CaloCubecLcLParticle);
      instance.SetDestructor(&destruct_CaloCubecLcLParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CaloCube::Particle*)
   {
      return GenerateInitInstanceLocal((::CaloCube::Particle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CaloCube::Particle*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void CaloCubecLcLParticle_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::CaloCube::Particle*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void CaloCubecLcLException_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void CaloCubecLcLException_Dictionary();
   static void delete_CaloCubecLcLException(void *p);
   static void deleteArray_CaloCubecLcLException(void *p);
   static void destruct_CaloCubecLcLException(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CaloCube::Exception*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::CaloCube::Exception) == sizeof(::ROOT::Shadow::CaloCube::Exception));
      ::CaloCube::Exception *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::CaloCube::Exception),0);
      static ::ROOT::TGenericClassInfo 
         instance("CaloCube::Exception", "./../include/Exception.h", 9,
                  typeid(::CaloCube::Exception), DefineBehavior(ptr, ptr),
                  &CaloCubecLcLException_ShowMembers, &CaloCubecLcLException_Dictionary, isa_proxy, 4,
                  sizeof(::CaloCube::Exception) );
      instance.SetDelete(&delete_CaloCubecLcLException);
      instance.SetDeleteArray(&deleteArray_CaloCubecLcLException);
      instance.SetDestructor(&destruct_CaloCubecLcLException);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CaloCube::Exception*)
   {
      return GenerateInitInstanceLocal((::CaloCube::Exception*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CaloCube::Exception*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void CaloCubecLcLException_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::CaloCube::Exception*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void CaloCubecLcLGlobalEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void CaloCubecLcLGlobalEvent_Dictionary();
   static void *new_CaloCubecLcLGlobalEvent(void *p = 0);
   static void *newArray_CaloCubecLcLGlobalEvent(Long_t size, void *p);
   static void delete_CaloCubecLcLGlobalEvent(void *p);
   static void deleteArray_CaloCubecLcLGlobalEvent(void *p);
   static void destruct_CaloCubecLcLGlobalEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CaloCube::GlobalEvent*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::CaloCube::GlobalEvent) == sizeof(::ROOT::Shadow::CaloCube::GlobalEvent));
      ::CaloCube::GlobalEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::CaloCube::GlobalEvent),0);
      static ::ROOT::TGenericClassInfo 
         instance("CaloCube::GlobalEvent", "./../include/GlobalEvent.h", 5,
                  typeid(::CaloCube::GlobalEvent), DefineBehavior(ptr, ptr),
                  &CaloCubecLcLGlobalEvent_ShowMembers, &CaloCubecLcLGlobalEvent_Dictionary, isa_proxy, 4,
                  sizeof(::CaloCube::GlobalEvent) );
      instance.SetNew(&new_CaloCubecLcLGlobalEvent);
      instance.SetNewArray(&newArray_CaloCubecLcLGlobalEvent);
      instance.SetDelete(&delete_CaloCubecLcLGlobalEvent);
      instance.SetDeleteArray(&deleteArray_CaloCubecLcLGlobalEvent);
      instance.SetDestructor(&destruct_CaloCubecLcLGlobalEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CaloCube::GlobalEvent*)
   {
      return GenerateInitInstanceLocal((::CaloCube::GlobalEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CaloCube::GlobalEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void CaloCubecLcLGlobalEvent_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::CaloCube::GlobalEvent*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void CaloCubecLcLCrystal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void CaloCubecLcLCrystal_Dictionary();
   static void *new_CaloCubecLcLCrystal(void *p = 0);
   static void *newArray_CaloCubecLcLCrystal(Long_t size, void *p);
   static void delete_CaloCubecLcLCrystal(void *p);
   static void deleteArray_CaloCubecLcLCrystal(void *p);
   static void destruct_CaloCubecLcLCrystal(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CaloCube::Crystal*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::CaloCube::Crystal) == sizeof(::ROOT::Shadow::CaloCube::Crystal));
      ::CaloCube::Crystal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::CaloCube::Crystal),0);
      static ::ROOT::TGenericClassInfo 
         instance("CaloCube::Crystal", "./../include/Crystal.h", 13,
                  typeid(::CaloCube::Crystal), DefineBehavior(ptr, ptr),
                  &CaloCubecLcLCrystal_ShowMembers, &CaloCubecLcLCrystal_Dictionary, isa_proxy, 4,
                  sizeof(::CaloCube::Crystal) );
      instance.SetNew(&new_CaloCubecLcLCrystal);
      instance.SetNewArray(&newArray_CaloCubecLcLCrystal);
      instance.SetDelete(&delete_CaloCubecLcLCrystal);
      instance.SetDeleteArray(&deleteArray_CaloCubecLcLCrystal);
      instance.SetDestructor(&destruct_CaloCubecLcLCrystal);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CaloCube::Crystal*)
   {
      return GenerateInitInstanceLocal((::CaloCube::Crystal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CaloCube::Crystal*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void CaloCubecLcLCrystal_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::CaloCube::Crystal*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void CaloCubecLcLReflECaloCubecLcLParticlegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void CaloCubecLcLReflECaloCubecLcLParticlegR_Dictionary();
   static void *new_CaloCubecLcLReflECaloCubecLcLParticlegR(void *p = 0);
   static void *newArray_CaloCubecLcLReflECaloCubecLcLParticlegR(Long_t size, void *p);
   static void delete_CaloCubecLcLReflECaloCubecLcLParticlegR(void *p);
   static void deleteArray_CaloCubecLcLReflECaloCubecLcLParticlegR(void *p);
   static void destruct_CaloCubecLcLReflECaloCubecLcLParticlegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CaloCube::Ref<CaloCube::Particle>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::CaloCube::Ref<CaloCube::Particle>) == sizeof(::ROOT::Shadow::CaloCube::ReflECaloCubecLcLParticlegR));
      ::CaloCube::Ref<CaloCube::Particle> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::CaloCube::Ref<CaloCube::Particle>),0);
      static ::ROOT::TGenericClassInfo 
         instance("CaloCube::Ref<CaloCube::Particle>", "./../include/Ref.h", 13,
                  typeid(::CaloCube::Ref<CaloCube::Particle>), DefineBehavior(ptr, ptr),
                  &CaloCubecLcLReflECaloCubecLcLParticlegR_ShowMembers, &CaloCubecLcLReflECaloCubecLcLParticlegR_Dictionary, isa_proxy, 4,
                  sizeof(::CaloCube::Ref<CaloCube::Particle>) );
      instance.SetNew(&new_CaloCubecLcLReflECaloCubecLcLParticlegR);
      instance.SetNewArray(&newArray_CaloCubecLcLReflECaloCubecLcLParticlegR);
      instance.SetDelete(&delete_CaloCubecLcLReflECaloCubecLcLParticlegR);
      instance.SetDeleteArray(&deleteArray_CaloCubecLcLReflECaloCubecLcLParticlegR);
      instance.SetDestructor(&destruct_CaloCubecLcLReflECaloCubecLcLParticlegR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CaloCube::Ref<CaloCube::Particle>*)
   {
      return GenerateInitInstanceLocal((::CaloCube::Ref<CaloCube::Particle>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CaloCube::Ref<CaloCube::Particle>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void CaloCubecLcLReflECaloCubecLcLParticlegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::CaloCube::Ref<CaloCube::Particle>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR_Dictionary();
   static void *new_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR(void *p = 0);
   static void *newArray_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR(Long_t size, void *p);
   static void delete_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR(void *p);
   static void deleteArray_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR(void *p);
   static void destruct_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<CaloCube::Ref<CaloCube::Particle>,double>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(pair<CaloCube::Ref<CaloCube::Particle>,double>) == sizeof(::ROOT::Shadow::pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR));
      pair<CaloCube::Ref<CaloCube::Particle>,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<CaloCube::Ref<CaloCube::Particle>,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<CaloCube::Ref<CaloCube::Particle>,double>", "/usr/local//lib/root/cint/cint/lib/prec_stl/utility", 17,
                  typeid(pair<CaloCube::Ref<CaloCube::Particle>,double>), DefineBehavior(ptr, ptr),
                  &pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR_ShowMembers, &pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(pair<CaloCube::Ref<CaloCube::Particle>,double>) );
      instance.SetNew(&new_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR);
      instance.SetNewArray(&newArray_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR);
      instance.SetDelete(&delete_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR);
      instance.SetDestructor(&destruct_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const pair<CaloCube::Ref<CaloCube::Particle>,double>*)
   {
      return GenerateInitInstanceLocal((pair<CaloCube::Ref<CaloCube::Particle>,double>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<CaloCube::Ref<CaloCube::Particle>,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const pair<CaloCube::Ref<CaloCube::Particle>,double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
namespace ROOT {
   void CaloCubecLcLParticle_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class CaloCube::Particle.
      typedef ::ROOT::Shadow::CaloCube::Particle ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::CaloCube::Particle*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_name", (void*)&sobj->_name);
      R__insp.InspectMember("string", (void*)&sobj->_name, "_name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_creatorProcess", (void*)&sobj->_creatorProcess);
      R__insp.InspectMember("string", (void*)&sobj->_creatorProcess, "_creatorProcess.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_totalEnergy", &sobj->_totalEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_momentum", (void*)&sobj->_momentum);
      R__insp.InspectMember("G4ThreeVector", (void*)&sobj->_momentum, "_momentum.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pos", (void*)&sobj->_pos);
      R__insp.InspectMember("CaloCube::Position", (void*)&sobj->_pos, "_pos.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_track", &sobj->_track);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CaloCubecLcLParticle(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CaloCube::Particle : new ::CaloCube::Particle;
   }
   static void *newArray_CaloCubecLcLParticle(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CaloCube::Particle[nElements] : new ::CaloCube::Particle[nElements];
   }
   // Wrapper around operator delete
   static void delete_CaloCubecLcLParticle(void *p) {
      delete ((::CaloCube::Particle*)p);
   }
   static void deleteArray_CaloCubecLcLParticle(void *p) {
      delete [] ((::CaloCube::Particle*)p);
   }
   static void destruct_CaloCubecLcLParticle(void *p) {
      typedef ::CaloCube::Particle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CaloCube::Particle

//______________________________________________________________________________
namespace ROOT {
   void CaloCubecLcLReflECaloCubecLcLParticlegR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class CaloCube::Ref<CaloCube::Particle>.
      typedef ::ROOT::Shadow::CaloCube::ReflECaloCubecLcLParticlegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::CaloCube::Ref<CaloCube::Particle>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_treeName", (void*)&sobj->_treeName);
      R__insp.InspectMember("string", (void*)&sobj->_treeName, "_treeName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_branchName", (void*)&sobj->_branchName);
      R__insp.InspectMember("string", (void*)&sobj->_branchName, "_branchName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_index", &sobj->_index);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CaloCubecLcLReflECaloCubecLcLParticlegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CaloCube::Ref<CaloCube::Particle> : new ::CaloCube::Ref<CaloCube::Particle>;
   }
   static void *newArray_CaloCubecLcLReflECaloCubecLcLParticlegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CaloCube::Ref<CaloCube::Particle>[nElements] : new ::CaloCube::Ref<CaloCube::Particle>[nElements];
   }
   // Wrapper around operator delete
   static void delete_CaloCubecLcLReflECaloCubecLcLParticlegR(void *p) {
      delete ((::CaloCube::Ref<CaloCube::Particle>*)p);
   }
   static void deleteArray_CaloCubecLcLReflECaloCubecLcLParticlegR(void *p) {
      delete [] ((::CaloCube::Ref<CaloCube::Particle>*)p);
   }
   static void destruct_CaloCubecLcLReflECaloCubecLcLParticlegR(void *p) {
      typedef ::CaloCube::Ref<CaloCube::Particle> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CaloCube::Ref<CaloCube::Particle>

//______________________________________________________________________________
namespace ROOT {
   void pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<CaloCube::Ref<CaloCube::Particle>,double>.
      typedef ::ROOT::Shadow::pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const pair<CaloCube::Ref<CaloCube::Particle>,double>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", (void*)&sobj->first);
      R__insp.InspectMember("CaloCube::Ref<CaloCube::Particle>", (void*)&sobj->first, "first.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", &sobj->second);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<CaloCube::Ref<CaloCube::Particle>,double> : new pair<CaloCube::Ref<CaloCube::Particle>,double>;
   }
   static void *newArray_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<CaloCube::Ref<CaloCube::Particle>,double>[nElements] : new pair<CaloCube::Ref<CaloCube::Particle>,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR(void *p) {
      delete ((pair<CaloCube::Ref<CaloCube::Particle>,double>*)p);
   }
   static void deleteArray_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR(void *p) {
      delete [] ((pair<CaloCube::Ref<CaloCube::Particle>,double>*)p);
   }
   static void destruct_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR(void *p) {
      typedef pair<CaloCube::Ref<CaloCube::Particle>,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<CaloCube::Ref<CaloCube::Particle>,double>

//______________________________________________________________________________
namespace ROOT {
   void CaloCubecLcLCrystal_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class CaloCube::Crystal.
      typedef ::ROOT::Shadow::CaloCube::Crystal ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::CaloCube::Crystal*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pos", (void*)&sobj->_pos);
      R__insp.InspectMember("CaloCube::Position", (void*)&sobj->_pos, "_pos.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_material", (void*)&sobj->_material);
      R__insp.InspectMember("string", (void*)&sobj->_material, "_material.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_totalEnergy", &sobj->_totalEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_allParticlesOriginatingHere", (void*)&sobj->_allParticlesOriginatingHere);
      R__insp.InspectMember("vector<std::pair<CaloCube::Ref<CaloCube::Particle>,double> >", (void*)&sobj->_allParticlesOriginatingHere, "_allParticlesOriginatingHere.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_allParticlesPassingHere", (void*)&sobj->_allParticlesPassingHere);
      R__insp.InspectMember("vector<std::pair<CaloCube::Ref<CaloCube::Particle>,double> >", (void*)&sobj->_allParticlesPassingHere, "_allParticlesPassingHere.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_allPiOOriginatingHere", (void*)&sobj->_allPiOOriginatingHere);
      R__insp.InspectMember("vector<std::pair<CaloCube::Ref<CaloCube::Particle>,double> >", (void*)&sobj->_allPiOOriginatingHere, "_allPiOOriginatingHere.", false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CaloCubecLcLCrystal(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CaloCube::Crystal : new ::CaloCube::Crystal;
   }
   static void *newArray_CaloCubecLcLCrystal(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CaloCube::Crystal[nElements] : new ::CaloCube::Crystal[nElements];
   }
   // Wrapper around operator delete
   static void delete_CaloCubecLcLCrystal(void *p) {
      delete ((::CaloCube::Crystal*)p);
   }
   static void deleteArray_CaloCubecLcLCrystal(void *p) {
      delete [] ((::CaloCube::Crystal*)p);
   }
   static void destruct_CaloCubecLcLCrystal(void *p) {
      typedef ::CaloCube::Crystal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CaloCube::Crystal

//______________________________________________________________________________
namespace ROOT {
   void CLHEPcLcLHep3Vector_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class CLHEP::Hep3Vector.
      typedef ::ROOT::Shadow::CLHEP::Hep3Vector ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::CLHEP::Hep3Vector*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dx", &sobj->dx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dy", &sobj->dy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dz", &sobj->dz);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CLHEPcLcLHep3Vector(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CLHEP::Hep3Vector : new ::CLHEP::Hep3Vector;
   }
   static void *newArray_CLHEPcLcLHep3Vector(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CLHEP::Hep3Vector[nElements] : new ::CLHEP::Hep3Vector[nElements];
   }
   // Wrapper around operator delete
   static void delete_CLHEPcLcLHep3Vector(void *p) {
      delete ((::CLHEP::Hep3Vector*)p);
   }
   static void deleteArray_CLHEPcLcLHep3Vector(void *p) {
      delete [] ((::CLHEP::Hep3Vector*)p);
   }
   static void destruct_CLHEPcLcLHep3Vector(void *p) {
      typedef ::CLHEP::Hep3Vector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CLHEP::Hep3Vector

//______________________________________________________________________________
namespace ROOT {
   void CaloCubecLcLPosition_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class CaloCube::Position.
      typedef ::ROOT::Shadow::CaloCube::Position ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::CaloCube::Position*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_x", &sobj->_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_y", &sobj->_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_z", &sobj->_z);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CaloCubecLcLPosition(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CaloCube::Position : new ::CaloCube::Position;
   }
   static void *newArray_CaloCubecLcLPosition(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CaloCube::Position[nElements] : new ::CaloCube::Position[nElements];
   }
   // Wrapper around operator delete
   static void delete_CaloCubecLcLPosition(void *p) {
      delete ((::CaloCube::Position*)p);
   }
   static void deleteArray_CaloCubecLcLPosition(void *p) {
      delete [] ((::CaloCube::Position*)p);
   }
   static void destruct_CaloCubecLcLPosition(void *p) {
      typedef ::CaloCube::Position current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CaloCube::Position

//______________________________________________________________________________
namespace ROOT {
   void CaloCubecLcLException_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class CaloCube::Exception.
      typedef ::ROOT::Shadow::CaloCube::Exception ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::CaloCube::Exception*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cathegory", (void*)&sobj->_cathegory);
      R__insp.InspectMember("string", (void*)&sobj->_cathegory, "_cathegory.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "message", (void*)&sobj->message);
      R__insp.InspectMember("string", (void*)&sobj->message, "message.", false);
      R__insp.GenericShowMembers("exception", ( ::exception * )( (::CaloCube::Exception*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_CaloCubecLcLException(void *p) {
      delete ((::CaloCube::Exception*)p);
   }
   static void deleteArray_CaloCubecLcLException(void *p) {
      delete [] ((::CaloCube::Exception*)p);
   }
   static void destruct_CaloCubecLcLException(void *p) {
      typedef ::CaloCube::Exception current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CaloCube::Exception

//______________________________________________________________________________
namespace ROOT {
   void CaloCubecLcLGlobalEvent_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class CaloCube::GlobalEvent.
      typedef ::ROOT::Shadow::CaloCube::GlobalEvent ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::CaloCube::GlobalEvent*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CaloCubecLcLGlobalEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CaloCube::GlobalEvent : new ::CaloCube::GlobalEvent;
   }
   static void *newArray_CaloCubecLcLGlobalEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CaloCube::GlobalEvent[nElements] : new ::CaloCube::GlobalEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_CaloCubecLcLGlobalEvent(void *p) {
      delete ((::CaloCube::GlobalEvent*)p);
   }
   static void deleteArray_CaloCubecLcLGlobalEvent(void *p) {
      delete [] ((::CaloCube::GlobalEvent*)p);
   }
   static void destruct_CaloCubecLcLGlobalEvent(void *p) {
      typedef ::CaloCube::GlobalEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CaloCube::GlobalEvent

namespace ROOT {
   void vectorlECaloCubecLcLCrystalgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlECaloCubecLcLCrystalgR_Dictionary();
   static void *new_vectorlECaloCubecLcLCrystalgR(void *p = 0);
   static void *newArray_vectorlECaloCubecLcLCrystalgR(Long_t size, void *p);
   static void delete_vectorlECaloCubecLcLCrystalgR(void *p);
   static void deleteArray_vectorlECaloCubecLcLCrystalgR(void *p);
   static void destruct_vectorlECaloCubecLcLCrystalgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<CaloCube::Crystal>*)
   {
      vector<CaloCube::Crystal> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<CaloCube::Crystal>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<CaloCube::Crystal>", -2, "/usr/local//lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<CaloCube::Crystal>), DefineBehavior(ptr, ptr),
                  0, &vectorlECaloCubecLcLCrystalgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<CaloCube::Crystal>) );
      instance.SetNew(&new_vectorlECaloCubecLcLCrystalgR);
      instance.SetNewArray(&newArray_vectorlECaloCubecLcLCrystalgR);
      instance.SetDelete(&delete_vectorlECaloCubecLcLCrystalgR);
      instance.SetDeleteArray(&deleteArray_vectorlECaloCubecLcLCrystalgR);
      instance.SetDestructor(&destruct_vectorlECaloCubecLcLCrystalgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<CaloCube::Crystal> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<CaloCube::Crystal>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlECaloCubecLcLCrystalgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<CaloCube::Crystal>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlECaloCubecLcLCrystalgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CaloCube::Crystal> : new vector<CaloCube::Crystal>;
   }
   static void *newArray_vectorlECaloCubecLcLCrystalgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CaloCube::Crystal>[nElements] : new vector<CaloCube::Crystal>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlECaloCubecLcLCrystalgR(void *p) {
      delete ((vector<CaloCube::Crystal>*)p);
   }
   static void deleteArray_vectorlECaloCubecLcLCrystalgR(void *p) {
      delete [] ((vector<CaloCube::Crystal>*)p);
   }
   static void destruct_vectorlECaloCubecLcLCrystalgR(void *p) {
      typedef vector<CaloCube::Crystal> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<CaloCube::Crystal>

namespace ROOT {
   void vectorlECaloCubecLcLParticlegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlECaloCubecLcLParticlegR_Dictionary();
   static void *new_vectorlECaloCubecLcLParticlegR(void *p = 0);
   static void *newArray_vectorlECaloCubecLcLParticlegR(Long_t size, void *p);
   static void delete_vectorlECaloCubecLcLParticlegR(void *p);
   static void deleteArray_vectorlECaloCubecLcLParticlegR(void *p);
   static void destruct_vectorlECaloCubecLcLParticlegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<CaloCube::Particle>*)
   {
      vector<CaloCube::Particle> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<CaloCube::Particle>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<CaloCube::Particle>", -2, "/usr/local//lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<CaloCube::Particle>), DefineBehavior(ptr, ptr),
                  0, &vectorlECaloCubecLcLParticlegR_Dictionary, isa_proxy, 4,
                  sizeof(vector<CaloCube::Particle>) );
      instance.SetNew(&new_vectorlECaloCubecLcLParticlegR);
      instance.SetNewArray(&newArray_vectorlECaloCubecLcLParticlegR);
      instance.SetDelete(&delete_vectorlECaloCubecLcLParticlegR);
      instance.SetDeleteArray(&deleteArray_vectorlECaloCubecLcLParticlegR);
      instance.SetDestructor(&destruct_vectorlECaloCubecLcLParticlegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<CaloCube::Particle> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<CaloCube::Particle>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlECaloCubecLcLParticlegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<CaloCube::Particle>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlECaloCubecLcLParticlegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CaloCube::Particle> : new vector<CaloCube::Particle>;
   }
   static void *newArray_vectorlECaloCubecLcLParticlegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CaloCube::Particle>[nElements] : new vector<CaloCube::Particle>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlECaloCubecLcLParticlegR(void *p) {
      delete ((vector<CaloCube::Particle>*)p);
   }
   static void deleteArray_vectorlECaloCubecLcLParticlegR(void *p) {
      delete [] ((vector<CaloCube::Particle>*)p);
   }
   static void destruct_vectorlECaloCubecLcLParticlegR(void *p) {
      typedef vector<CaloCube::Particle> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<CaloCube::Particle>

namespace ROOT {
   void vectorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgR_Dictionary();
   static void *new_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgR(void *p = 0);
   static void *newArray_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgR(Long_t size, void *p);
   static void delete_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgR(void *p);
   static void deleteArray_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgR(void *p);
   static void destruct_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<CaloCube::Ref<CaloCube::Particle> >*)
   {
      vector<CaloCube::Ref<CaloCube::Particle> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<CaloCube::Ref<CaloCube::Particle> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<CaloCube::Ref<CaloCube::Particle> >", -2, "/usr/local//lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<CaloCube::Ref<CaloCube::Particle> >), DefineBehavior(ptr, ptr),
                  0, &vectorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<CaloCube::Ref<CaloCube::Particle> >) );
      instance.SetNew(&new_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgR);
      instance.SetNewArray(&newArray_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgR);
      instance.SetDelete(&delete_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgR);
      instance.SetDestructor(&destruct_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<CaloCube::Ref<CaloCube::Particle> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<CaloCube::Ref<CaloCube::Particle> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<CaloCube::Ref<CaloCube::Particle> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CaloCube::Ref<CaloCube::Particle> > : new vector<CaloCube::Ref<CaloCube::Particle> >;
   }
   static void *newArray_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CaloCube::Ref<CaloCube::Particle> >[nElements] : new vector<CaloCube::Ref<CaloCube::Particle> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgR(void *p) {
      delete ((vector<CaloCube::Ref<CaloCube::Particle> >*)p);
   }
   static void deleteArray_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgR(void *p) {
      delete [] ((vector<CaloCube::Ref<CaloCube::Particle> >*)p);
   }
   static void destruct_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgR(void *p) {
      typedef vector<CaloCube::Ref<CaloCube::Particle> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<CaloCube::Ref<CaloCube::Particle> >

namespace ROOT {
   void vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgR_Dictionary();
   static void *new_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgR(void *p);
   static void deleteArray_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgR(void *p);
   static void destruct_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<CaloCube::Ref<CaloCube::Particle>,double> >*)
   {
      vector<pair<CaloCube::Ref<CaloCube::Particle>,double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<CaloCube::Ref<CaloCube::Particle>,double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<CaloCube::Ref<CaloCube::Particle>,double> >", -2, "/usr/local//lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<pair<CaloCube::Ref<CaloCube::Particle>,double> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<pair<CaloCube::Ref<CaloCube::Particle>,double> >) );
      instance.SetNew(&new_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgR);
      instance.SetDelete(&delete_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<pair<CaloCube::Ref<CaloCube::Particle>,double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<CaloCube::Ref<CaloCube::Particle>,double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<pair<CaloCube::Ref<CaloCube::Particle>,double> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<CaloCube::Ref<CaloCube::Particle>,double> > : new vector<pair<CaloCube::Ref<CaloCube::Particle>,double> >;
   }
   static void *newArray_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<CaloCube::Ref<CaloCube::Particle>,double> >[nElements] : new vector<pair<CaloCube::Ref<CaloCube::Particle>,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgR(void *p) {
      delete ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double> >*)p);
   }
   static void deleteArray_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgR(void *p) {
      delete [] ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double> >*)p);
   }
   static void destruct_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgR(void *p) {
      typedef vector<pair<CaloCube::Ref<CaloCube::Particle>,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<pair<CaloCube::Ref<CaloCube::Particle>,double> >

/********************************************************
* CaloCubeDictionary.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableCaloCubeDictionary();

extern "C" void G__set_cpp_environmentCaloCubeDictionary() {
  G__cpp_reset_tagtableCaloCubeDictionary();
}
#include <new>
extern "C" int G__cpp_dllrevCaloCubeDictionary() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* CLHEP */
static int G__CaloCubeDictionary_194_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CLHEP::Hep3Vector* pobj;
         CLHEP::Hep3Vector xobj = CLHEP::rotationXOf(*(CLHEP::Hep3Vector*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_194_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CLHEP::Hep3Vector* pobj;
         CLHEP::Hep3Vector xobj = CLHEP::rotationYOf(*(CLHEP::Hep3Vector*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_194_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CLHEP::Hep3Vector* pobj;
         CLHEP::Hep3Vector xobj = CLHEP::rotationZOf(*(CLHEP::Hep3Vector*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_194_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CLHEP::Hep3Vector* pobj;
         CLHEP::Hep3Vector xobj = CLHEP::rotationOf(*(CLHEP::Hep3Vector*) libp->para[0].ref, *(CLHEP::Hep3Vector*) libp->para[1].ref
, (double) G__double(libp->para[2]));
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_194_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CLHEP::Hep3Vector* pobj;
         CLHEP::Hep3Vector xobj = CLHEP::rotationOf(*(CLHEP::Hep3Vector*) libp->para[0].ref, *(CLHEP::HepAxisAngle*) libp->para[1].ref);
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_194_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CLHEP::Hep3Vector* pobj;
         CLHEP::Hep3Vector xobj = CLHEP::rotationOf(*(CLHEP::Hep3Vector*) libp->para[0].ref, (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_194_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CLHEP::Hep3Vector* pobj;
         CLHEP::Hep3Vector xobj = CLHEP::rotationOf(*(CLHEP::Hep3Vector*) libp->para[0].ref, *(CLHEP::HepEulerAngles*) libp->para[1].ref);
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_194_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = CLHEP::operator<<(*(ostream*) libp->para[0].ref, *(CLHEP::Hep3Vector*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_194_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const istream& obj = CLHEP::operator>>(*(istream*) libp->para[0].ref, *(CLHEP::Hep3Vector*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_194_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CLHEP::Hep3Vector* pobj;
         CLHEP::Hep3Vector xobj = CLHEP::operator/(*(CLHEP::Hep3Vector*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_194_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CLHEP::Hep3Vector* pobj;
         CLHEP::Hep3Vector xobj = CLHEP::operator+(*(CLHEP::Hep3Vector*) libp->para[0].ref, *(CLHEP::Hep3Vector*) libp->para[1].ref);
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_194_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CLHEP::Hep3Vector* pobj;
         CLHEP::Hep3Vector xobj = CLHEP::operator-(*(CLHEP::Hep3Vector*) libp->para[0].ref, *(CLHEP::Hep3Vector*) libp->para[1].ref);
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_194_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) CLHEP::operator*(*(CLHEP::Hep3Vector*) libp->para[0].ref, *(CLHEP::Hep3Vector*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_194_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CLHEP::Hep3Vector* pobj;
         CLHEP::Hep3Vector xobj = CLHEP::operator*(*(CLHEP::Hep3Vector*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_194_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CLHEP::Hep3Vector* pobj;
         CLHEP::Hep3Vector xobj = CLHEP::operator*((double) G__double(libp->para[0]), *(CLHEP::Hep3Vector*) libp->para[1].ref);
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}


/* CLHEP::Hep3Vector */
static int G__CaloCubeDictionary_199_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CLHEP::Hep3Vector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CLHEP::Hep3Vector[n];
     } else {
       p = new((void*) gvp) CLHEP::Hep3Vector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CLHEP::Hep3Vector;
     } else {
       p = new((void*) gvp) CLHEP::Hep3Vector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CLHEP::Hep3Vector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CLHEP::Hep3Vector((double) G__double(libp->para[0]));
   } else {
     p = new((void*) gvp) CLHEP::Hep3Vector((double) G__double(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CLHEP::Hep3Vector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CLHEP::Hep3Vector((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) CLHEP::Hep3Vector((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CLHEP::Hep3Vector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CLHEP::Hep3Vector(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) CLHEP::Hep3Vector(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CLHEP::Hep3Vector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CLHEP::Hep3Vector(*(CLHEP::Hep3Vector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) CLHEP::Hep3Vector(*(CLHEP::Hep3Vector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->operator()((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->operator[]((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setX((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setY((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setZ((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->set((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->cosTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->cos2Theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->mag2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->mag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setPhi((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setTheta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setMag((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->perp2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->perp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setPerp((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setCylTheta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->perp2(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->perp(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->operator=(*(CLHEP::Hep3Vector*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->operator==(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->operator!=(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->isNear(*(CLHEP::Hep3Vector*) libp->para[0].ref, (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->isNear(*(CLHEP::Hep3Vector*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->howNear(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->deltaR(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->operator+=(*(CLHEP::Hep3Vector*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->operator-=(*(CLHEP::Hep3Vector*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector* pobj;
         const CLHEP::Hep3Vector xobj = ((const CLHEP::Hep3Vector*) G__getstructoffset())->operator-();
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->operator*=((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->operator/=((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector* pobj;
         const CLHEP::Hep3Vector xobj = ((const CLHEP::Hep3Vector*) G__getstructoffset())->unit();
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector* pobj;
         const CLHEP::Hep3Vector xobj = ((const CLHEP::Hep3Vector*) G__getstructoffset())->orthogonal();
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->dot(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector* pobj;
         const CLHEP::Hep3Vector xobj = ((const CLHEP::Hep3Vector*) G__getstructoffset())->cross(*(CLHEP::Hep3Vector*) libp->para[0].ref);
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->angle(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->pseudoRapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setEta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setCylEta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->rotateX((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->rotateY((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->rotateZ((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->rotateUz(*(CLHEP::Hep3Vector*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->rotate((double) G__double(libp->para[0]), *(CLHEP::Hep3Vector*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->operator*=(*(CLHEP::HepRotation*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->transform(*(CLHEP::HepRotation*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setRThetaPhi((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setREtaPhi((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setRhoPhiZ((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setRhoPhiTheta((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setRhoPhiEta((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->getX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->getY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->getZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->getR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->getTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->getPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->r());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->rho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->getRho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->getEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setR((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setRho((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->compare(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->operator>(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->operator<(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->operator>=(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->operator<=(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->diff2(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) CLHEP::Hep3Vector::setTolerance((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) CLHEP::Hep3Vector::getTolerance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->isParallel(*(CLHEP::Hep3Vector*) libp->para[0].ref, (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->isParallel(*(CLHEP::Hep3Vector*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->isOrthogonal(*(CLHEP::Hep3Vector*) libp->para[0].ref, (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->isOrthogonal(*(CLHEP::Hep3Vector*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->howParallel(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->howOrthogonal(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->beta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->gamma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->coLinearRapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->angle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->theta(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->cosTheta(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->cos2Theta(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector* pobj;
         const CLHEP::Hep3Vector xobj = ((const CLHEP::Hep3Vector*) G__getstructoffset())->project();
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector* pobj;
         const CLHEP::Hep3Vector xobj = ((const CLHEP::Hep3Vector*) G__getstructoffset())->project(*(CLHEP::Hep3Vector*) libp->para[0].ref);
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector* pobj;
         const CLHEP::Hep3Vector xobj = ((const CLHEP::Hep3Vector*) G__getstructoffset())->perpPart();
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector* pobj;
         const CLHEP::Hep3Vector xobj = ((const CLHEP::Hep3Vector*) G__getstructoffset())->perpPart(*(CLHEP::Hep3Vector*) libp->para[0].ref);
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->rapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->rapidity(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->eta(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->polarAngle(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->deltaPhi(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->azimAngle(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->polarAngle(*(CLHEP::Hep3Vector*) libp->para[0].ref, *(CLHEP::Hep3Vector*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->azimAngle(*(CLHEP::Hep3Vector*) libp->para[0].ref, *(CLHEP::Hep3Vector*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->rotate(*(CLHEP::Hep3Vector*) libp->para[0].ref, (double) G__double(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->rotate(*(CLHEP::HepAxisAngle*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->rotate(*(CLHEP::HepEulerAngles*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_199_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->rotate((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CLHEP::Hep3Vector G__TCLHEPcLcLHep3Vector;
static int G__CaloCubeDictionary_199_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CLHEP::Hep3Vector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CLHEP::Hep3Vector*) (soff+(sizeof(CLHEP::Hep3Vector)*i)))->~G__TCLHEPcLcLHep3Vector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CLHEP::Hep3Vector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CLHEP::Hep3Vector*) (soff))->~G__TCLHEPcLcLHep3Vector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CaloCube */

/* CaloCube::Position */
static int G__CaloCubeDictionary_202_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CaloCube::Position* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CaloCube::Position[n];
     } else {
       p = new((void*) gvp) CaloCube::Position[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CaloCube::Position;
     } else {
       p = new((void*) gvp) CaloCube::Position;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLPosition));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_202_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CaloCube::Position* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CaloCube::Position(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) CaloCube::Position(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLPosition));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_202_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = ((const CaloCube::Position*) G__getstructoffset())->getX();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_202_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = ((const CaloCube::Position*) G__getstructoffset())->getY();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_202_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = ((const CaloCube::Position*) G__getstructoffset())->getZ();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_202_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const CaloCube::Position*) G__getstructoffset())->operator==(*(CaloCube::Position*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CaloCubeDictionary_202_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CaloCube::Position* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CaloCube::Position(*(CaloCube::Position*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLPosition));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CaloCube::Position G__TCaloCubecLcLPosition;
static int G__CaloCubeDictionary_202_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CaloCube::Position*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CaloCube::Position*) (soff+(sizeof(CaloCube::Position)*i)))->~G__TCaloCubecLcLPosition();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CaloCube::Position*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CaloCube::Position*) (soff))->~G__TCaloCubecLcLPosition();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CaloCubeDictionary_202_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CaloCube::Position* dest = (CaloCube::Position*) G__getstructoffset();
   *dest = *(CaloCube::Position*) libp->para[0].ref;
   const CaloCube::Position& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CaloCube::Particle */
static int G__CaloCubeDictionary_204_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CaloCube::Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CaloCube::Particle[n];
     } else {
       p = new((void*) gvp) CaloCube::Particle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CaloCube::Particle;
     } else {
       p = new((void*) gvp) CaloCube::Particle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_204_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CaloCube::Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CaloCube::Particle(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (double) G__double(libp->para[2]), *((G4ThreeVector*) G__int(libp->para[3]))
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
   } else {
     p = new((void*) gvp) CaloCube::Particle(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (double) G__double(libp->para[2]), *((G4ThreeVector*) G__int(libp->para[3]))
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_204_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const CaloCube::Particle*) G__getstructoffset())->getName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_204_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const CaloCube::Particle*) G__getstructoffset())->getCreatorProcess();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_204_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CaloCube::Particle*) G__getstructoffset())->getTotalEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_204_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const G4ThreeVector* pobj;
         const G4ThreeVector xobj = ((const CaloCube::Particle*) G__getstructoffset())->getMomentum();
         pobj = new G4ThreeVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_204_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CaloCube::Particle*) G__getstructoffset())->getTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_204_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CaloCube::Position& obj = ((const CaloCube::Particle*) G__getstructoffset())->getPositionOfOrigin();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_204_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CaloCube::Particle*) G__getstructoffset())->setTrack((G4Track*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CaloCubeDictionary_204_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CaloCube::Particle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CaloCube::Particle(*(CaloCube::Particle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CaloCube::Particle G__TCaloCubecLcLParticle;
static int G__CaloCubeDictionary_204_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CaloCube::Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CaloCube::Particle*) (soff+(sizeof(CaloCube::Particle)*i)))->~G__TCaloCubecLcLParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CaloCube::Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CaloCube::Particle*) (soff))->~G__TCaloCubecLcLParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CaloCube::Exception */
static int G__CaloCubeDictionary_209_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CaloCube::Exception* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CaloCube::Exception(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) CaloCube::Exception(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLException));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_209_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const CaloCube::Exception*) G__getstructoffset())->what());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CaloCubeDictionary_209_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CaloCube::Exception* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CaloCube::Exception(*(CaloCube::Exception*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLException));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CaloCube::Exception G__TCaloCubecLcLException;
static int G__CaloCubeDictionary_209_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CaloCube::Exception*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CaloCube::Exception*) (soff+(sizeof(CaloCube::Exception)*i)))->~G__TCaloCubecLcLException();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CaloCube::Exception*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CaloCube::Exception*) (soff))->~G__TCaloCubecLcLException();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CaloCube::GlobalEvent */
static int G__CaloCubeDictionary_210_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) CaloCube::GlobalEvent::getEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_210_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CaloCube::GlobalEvent::setEventNumber((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__CaloCubeDictionary_210_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CaloCube::GlobalEvent *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CaloCube::GlobalEvent[n];
     } else {
       p = new((void*) gvp) CaloCube::GlobalEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CaloCube::GlobalEvent;
     } else {
       p = new((void*) gvp) CaloCube::GlobalEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLGlobalEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CaloCubeDictionary_210_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CaloCube::GlobalEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CaloCube::GlobalEvent(*(CaloCube::GlobalEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLGlobalEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CaloCube::GlobalEvent G__TCaloCubecLcLGlobalEvent;
static int G__CaloCubeDictionary_210_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CaloCube::GlobalEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CaloCube::GlobalEvent*) (soff+(sizeof(CaloCube::GlobalEvent)*i)))->~G__TCaloCubecLcLGlobalEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CaloCube::GlobalEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CaloCube::GlobalEvent*) (soff))->~G__TCaloCubecLcLGlobalEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CaloCubeDictionary_210_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CaloCube::GlobalEvent* dest = (CaloCube::GlobalEvent*) G__getstructoffset();
   *dest = *(CaloCube::GlobalEvent*) libp->para[0].ref;
   const CaloCube::GlobalEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CaloCube::Crystal */
static int G__CaloCubeDictionary_557_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CaloCube::Crystal* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CaloCube::Crystal[n];
     } else {
       p = new((void*) gvp) CaloCube::Crystal[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CaloCube::Crystal;
     } else {
       p = new((void*) gvp) CaloCube::Crystal;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_557_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CaloCube::Crystal* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CaloCube::Crystal(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), *((string*) G__int(libp->para[3])));
   } else {
     p = new((void*) gvp) CaloCube::Crystal(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), *((string*) G__int(libp->para[3])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_557_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CaloCube::Position& obj = ((const CaloCube::Crystal*) G__getstructoffset())->getPosition();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_557_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const CaloCube::Crystal*) G__getstructoffset())->getMaterial();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_557_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CaloCube::Crystal*) G__getstructoffset())->getTotalEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_557_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::pair<CaloCube::Ref<CaloCube::Particle>,double> >* pobj;
         const vector<std::pair<CaloCube::Ref<CaloCube::Particle>,double> > xobj = ((const CaloCube::Crystal*) G__getstructoffset())->getAllParticlesBornHere();
         pobj = new vector<std::pair<CaloCube::Ref<CaloCube::Particle>,double> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_557_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::pair<CaloCube::Ref<CaloCube::Particle>,double> >* pobj;
         const vector<std::pair<CaloCube::Ref<CaloCube::Particle>,double> > xobj = ((const CaloCube::Crystal*) G__getstructoffset())->getAllParticlesPassingHere();
         pobj = new vector<std::pair<CaloCube::Ref<CaloCube::Particle>,double> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_557_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::pair<CaloCube::Ref<CaloCube::Particle>,double> >* pobj;
         const vector<std::pair<CaloCube::Ref<CaloCube::Particle>,double> > xobj = ((const CaloCube::Crystal*) G__getstructoffset())->getAllPi0PassingHere();
         pobj = new vector<std::pair<CaloCube::Ref<CaloCube::Particle>,double> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_557_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CaloCube::Crystal*) G__getstructoffset())->addParticlePassingHere(*(CaloCube::Ref<CaloCube::Particle>*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_557_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CaloCube::Crystal*) G__getstructoffset())->addParticleOriginatingHere(*(CaloCube::Ref<CaloCube::Particle>*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_557_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CaloCube::Crystal*) G__getstructoffset())->addPi0OriginatingHere(*(CaloCube::Ref<CaloCube::Particle>*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CaloCubeDictionary_557_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CaloCube::Crystal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CaloCube::Crystal(*(CaloCube::Crystal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CaloCube::Crystal G__TCaloCubecLcLCrystal;
static int G__CaloCubeDictionary_557_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CaloCube::Crystal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CaloCube::Crystal*) (soff+(sizeof(CaloCube::Crystal)*i)))->~G__TCaloCubecLcLCrystal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CaloCube::Crystal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CaloCube::Crystal*) (soff))->~G__TCaloCubecLcLCrystal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CaloCubeDictionary_557_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CaloCube::Crystal* dest = (CaloCube::Crystal*) G__getstructoffset();
   *dest = *(CaloCube::Crystal*) libp->para[0].ref;
   const CaloCube::Crystal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CaloCube::Ref<CaloCube::Particle> */
static int G__CaloCubeDictionary_558_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CaloCube::Ref<CaloCube::Particle>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CaloCube::Ref<CaloCube::Particle>[n];
     } else {
       p = new((void*) gvp) CaloCube::Ref<CaloCube::Particle>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CaloCube::Ref<CaloCube::Particle>;
     } else {
       p = new((void*) gvp) CaloCube::Ref<CaloCube::Particle>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_558_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CaloCube::Ref<CaloCube::Particle>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CaloCube::Ref<CaloCube::Particle>(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (unsigned int) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) CaloCube::Ref<CaloCube::Particle>(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (unsigned int) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_558_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CaloCube::Particle& obj = ((const CaloCube::Ref<CaloCube::Particle>*) G__getstructoffset())->get();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CaloCubeDictionary_558_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CaloCube::Ref<CaloCube::Particle>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CaloCube::Ref<CaloCube::Particle>(*(CaloCube::Ref<CaloCube::Particle>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CaloCube::Ref<CaloCube::Particle> G__TCaloCubecLcLReflECaloCubecLcLParticlegR;
static int G__CaloCubeDictionary_558_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CaloCube::Ref<CaloCube::Particle>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CaloCube::Ref<CaloCube::Particle>*) (soff+(sizeof(CaloCube::Ref<CaloCube::Particle>)*i)))->~G__TCaloCubecLcLReflECaloCubecLcLParticlegR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CaloCube::Ref<CaloCube::Particle>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CaloCube::Ref<CaloCube::Particle>*) (soff))->~G__TCaloCubecLcLReflECaloCubecLcLParticlegR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CaloCubeDictionary_558_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CaloCube::Ref<CaloCube::Particle>* dest = (CaloCube::Ref<CaloCube::Particle>*) G__getstructoffset();
   *dest = *(CaloCube::Ref<CaloCube::Particle>*) libp->para[0].ref;
   const CaloCube::Ref<CaloCube::Particle>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<CaloCube::Particle,allocator<CaloCube::Particle> > */
static int G__CaloCubeDictionary_560_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<CaloCube::Particle,allocator<CaloCube::Particle> >::reference obj = ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->at((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Particle,allocator<CaloCube::Particle> >::const_reference obj = ((const vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->at((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator* pobj;
         vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator xobj = ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->begin();
         pobj = new vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator* pobj;
         vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator xobj = ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->end();
         pobj = new vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Particle,allocator<CaloCube::Particle> >::reverse_iterator* pobj;
         vector<CaloCube::Particle,allocator<CaloCube::Particle> >::reverse_iterator xobj = ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->rbegin();
         pobj = new vector<CaloCube::Particle,allocator<CaloCube::Particle> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Particle,allocator<CaloCube::Particle> >::reverse_iterator* pobj;
         vector<CaloCube::Particle,allocator<CaloCube::Particle> >::reverse_iterator xobj = ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->rend();
         pobj = new vector<CaloCube::Particle,allocator<CaloCube::Particle> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->resize((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->resize((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type) G__int(libp->para[0]), *((CaloCube::Particle*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<CaloCube::Particle,allocator<CaloCube::Particle> >::reference obj = ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->operator[]((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Particle,allocator<CaloCube::Particle> >::const_reference obj = ((const vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->operator[]((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<CaloCube::Particle,allocator<CaloCube::Particle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<CaloCube::Particle,allocator<CaloCube::Particle> >[n];
     } else {
       p = new((void*) gvp) vector<CaloCube::Particle,allocator<CaloCube::Particle> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<CaloCube::Particle,allocator<CaloCube::Particle> >;
     } else {
       p = new((void*) gvp) vector<CaloCube::Particle,allocator<CaloCube::Particle> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<CaloCube::Particle,allocator<CaloCube::Particle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<CaloCube::Particle,allocator<CaloCube::Particle> >((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type) G__int(libp->para[0]), *(CaloCube::Particle*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<CaloCube::Particle,allocator<CaloCube::Particle> >((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type) G__int(libp->para[0]), *(CaloCube::Particle*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<CaloCube::Particle,allocator<CaloCube::Particle> >((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<CaloCube::Particle,allocator<CaloCube::Particle> >((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<CaloCube::Particle,allocator<CaloCube::Particle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<CaloCube::Particle,allocator<CaloCube::Particle> >(*(vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<CaloCube::Particle,allocator<CaloCube::Particle> >(*(vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<CaloCube::Particle,allocator<CaloCube::Particle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<CaloCube::Particle,allocator<CaloCube::Particle> >(*((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::const_iterator*) G__int(libp->para[0])), *((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<CaloCube::Particle,allocator<CaloCube::Particle> >(*((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::const_iterator*) G__int(libp->para[0])), *((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<CaloCube::Particle,allocator<CaloCube::Particle> >& obj = ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->operator=(*(vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->reserve((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CaloCube::Particle& obj = ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CaloCube::Particle& obj = ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->push_back(*(CaloCube::Particle*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->swap(*(vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator* pobj;
         vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator xobj = ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->insert(*((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator*) G__int(libp->para[0])), *(CaloCube::Particle*) libp->para[1].ref);
         pobj = new vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->insert(*((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator*) G__int(libp->para[0])), *((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::const_iterator*) G__int(libp->para[1]))
, *((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->insert(*((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator*) G__int(libp->para[0])), (vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type) G__int(libp->para[1])
, *(CaloCube::Particle*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->erase(*((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->erase(*((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator*) G__int(libp->para[0])), *((vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_560_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<CaloCube::Particle,allocator<CaloCube::Particle> > G__TvectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR;
static int G__CaloCubeDictionary_560_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) (soff+(sizeof(vector<CaloCube::Particle,allocator<CaloCube::Particle> >)*i)))->~G__TvectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<CaloCube::Particle,allocator<CaloCube::Particle> >*) (soff))->~G__TvectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<CaloCube::Ref<CaloCube::Particle>,double> */
static int G__CaloCubeDictionary_563_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<CaloCube::Ref<CaloCube::Particle>,double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<CaloCube::Ref<CaloCube::Particle>,double>[n];
     } else {
       p = new((void*) gvp) pair<CaloCube::Ref<CaloCube::Particle>,double>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<CaloCube::Ref<CaloCube::Particle>,double>;
     } else {
       p = new((void*) gvp) pair<CaloCube::Ref<CaloCube::Particle>,double>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_563_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<CaloCube::Ref<CaloCube::Particle>,double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<CaloCube::Ref<CaloCube::Particle>,double>(*(CaloCube::Ref<CaloCube::Particle>*) libp->para[0].ref, *(double*) G__Doubleref(&libp->para[1]));
   } else {
     p = new((void*) gvp) pair<CaloCube::Ref<CaloCube::Particle>,double>(*(CaloCube::Ref<CaloCube::Particle>*) libp->para[0].ref, *(double*) G__Doubleref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CaloCubeDictionary_563_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<CaloCube::Ref<CaloCube::Particle>,double>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<CaloCube::Ref<CaloCube::Particle>,double>(*(pair<CaloCube::Ref<CaloCube::Particle>,double>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<CaloCube::Ref<CaloCube::Particle>,double> G__TpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR;
static int G__CaloCubeDictionary_563_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<CaloCube::Ref<CaloCube::Particle>,double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<CaloCube::Ref<CaloCube::Particle>,double>*) (soff+(sizeof(pair<CaloCube::Ref<CaloCube::Particle>,double>)*i)))->~G__TpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<CaloCube::Ref<CaloCube::Particle>,double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<CaloCube::Ref<CaloCube::Particle>,double>*) (soff))->~G__TpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > > */
static int G__CaloCubeDictionary_565_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::reference obj = ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->at((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::const_reference obj = ((const vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->at((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator* pobj;
         vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator xobj = ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->begin();
         pobj = new vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator* pobj;
         vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator xobj = ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->end();
         pobj = new vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::reverse_iterator* pobj;
         vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::reverse_iterator xobj = ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->rbegin();
         pobj = new vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::reverse_iterator* pobj;
         vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::reverse_iterator xobj = ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->rend();
         pobj = new vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->resize((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->resize((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type) G__int(libp->para[0]), *((pair<CaloCube::Ref<CaloCube::Particle>,double>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::reference obj = ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->operator[]((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::const_reference obj = ((const vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->operator[]((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >[n];
     } else {
       p = new((void*) gvp) vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >;
     } else {
       p = new((void*) gvp) vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type) G__int(libp->para[0]), *(pair<CaloCube::Ref<CaloCube::Particle>,double>*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type) G__int(libp->para[0]), *(pair<CaloCube::Ref<CaloCube::Particle>,double>*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >(*(vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >(*(vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >(*((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::const_iterator*) G__int(libp->para[0])), *((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >(*((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::const_iterator*) G__int(libp->para[0])), *((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >& obj = ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->operator=(*(vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->reserve((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<CaloCube::Ref<CaloCube::Particle>,double>& obj = ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<CaloCube::Ref<CaloCube::Particle>,double>& obj = ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->push_back(*(pair<CaloCube::Ref<CaloCube::Particle>,double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->swap(*(vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator* pobj;
         vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator xobj = ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->insert(*((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator*) G__int(libp->para[0])), *(pair<CaloCube::Ref<CaloCube::Particle>,double>*) libp->para[1].ref);
         pobj = new vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->insert(*((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator*) G__int(libp->para[0])), *((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::const_iterator*) G__int(libp->para[1]))
, *((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->insert(*((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator*) G__int(libp->para[0])), (vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type) G__int(libp->para[1])
, *(pair<CaloCube::Ref<CaloCube::Particle>,double>*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->erase(*((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->erase(*((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator*) G__int(libp->para[0])), *((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_565_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > > G__TvectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR;
static int G__CaloCubeDictionary_565_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) (soff+(sizeof(vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >)*i)))->~G__TvectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*) (soff))->~G__TvectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > > */
static int G__CaloCubeDictionary_569_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::reference obj = ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->at((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::const_reference obj = ((const vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->at((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator* pobj;
         vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator xobj = ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->begin();
         pobj = new vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator* pobj;
         vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator xobj = ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->end();
         pobj = new vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::reverse_iterator* pobj;
         vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::reverse_iterator xobj = ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->rbegin();
         pobj = new vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::reverse_iterator* pobj;
         vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::reverse_iterator xobj = ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->rend();
         pobj = new vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->resize((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->resize((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type) G__int(libp->para[0]), *((CaloCube::Ref<CaloCube::Particle>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::reference obj = ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->operator[]((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::const_reference obj = ((const vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->operator[]((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >[n];
     } else {
       p = new((void*) gvp) vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >;
     } else {
       p = new((void*) gvp) vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type) G__int(libp->para[0]), *(CaloCube::Ref<CaloCube::Particle>*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type) G__int(libp->para[0]), *(CaloCube::Ref<CaloCube::Particle>*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >(*(vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >(*(vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >(*((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::const_iterator*) G__int(libp->para[0])), *((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >(*((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::const_iterator*) G__int(libp->para[0])), *((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >& obj = ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->operator=(*(vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->reserve((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CaloCube::Ref<CaloCube::Particle>& obj = ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CaloCube::Ref<CaloCube::Particle>& obj = ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->push_back(*(CaloCube::Ref<CaloCube::Particle>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->swap(*(vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator* pobj;
         vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator xobj = ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->insert(*((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator*) G__int(libp->para[0])), *(CaloCube::Ref<CaloCube::Particle>*) libp->para[1].ref);
         pobj = new vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->insert(*((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator*) G__int(libp->para[0])), *((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::const_iterator*) G__int(libp->para[1]))
, *((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->insert(*((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator*) G__int(libp->para[0])), (vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type) G__int(libp->para[1])
, *(CaloCube::Ref<CaloCube::Particle>*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->erase(*((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->erase(*((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator*) G__int(libp->para[0])), *((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_569_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > > G__TvectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR;
static int G__CaloCubeDictionary_569_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) (soff+(sizeof(vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >)*i)))->~G__TvectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*) (soff))->~G__TvectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<CaloCube::Crystal,allocator<CaloCube::Crystal> > */
static int G__CaloCubeDictionary_573_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::reference obj = ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->at((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::const_reference obj = ((const vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->at((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator* pobj;
         vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator xobj = ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->begin();
         pobj = new vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator* pobj;
         vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator xobj = ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->end();
         pobj = new vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::reverse_iterator* pobj;
         vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::reverse_iterator xobj = ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->rbegin();
         pobj = new vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::reverse_iterator* pobj;
         vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::reverse_iterator xobj = ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->rend();
         pobj = new vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->resize((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->resize((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type) G__int(libp->para[0]), *((CaloCube::Crystal*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::reference obj = ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->operator[]((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::const_reference obj = ((const vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->operator[]((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >[n];
     } else {
       p = new((void*) gvp) vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >;
     } else {
       p = new((void*) gvp) vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type) G__int(libp->para[0]), *(CaloCube::Crystal*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type) G__int(libp->para[0]), *(CaloCube::Crystal*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >(*(vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >(*(vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >(*((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::const_iterator*) G__int(libp->para[0])), *((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >(*((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::const_iterator*) G__int(libp->para[0])), *((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >& obj = ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->operator=(*(vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->reserve((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CaloCube::Crystal& obj = ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CaloCube::Crystal& obj = ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->push_back(*(CaloCube::Crystal*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->swap(*(vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator* pobj;
         vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator xobj = ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->insert(*((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator*) G__int(libp->para[0])), *(CaloCube::Crystal*) libp->para[1].ref);
         pobj = new vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->insert(*((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator*) G__int(libp->para[0])), *((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::const_iterator*) G__int(libp->para[1]))
, *((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->insert(*((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator*) G__int(libp->para[0])), (vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type) G__int(libp->para[1])
, *(CaloCube::Crystal*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->erase(*((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->erase(*((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator*) G__int(libp->para[0])), *((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CaloCubeDictionary_573_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<CaloCube::Crystal,allocator<CaloCube::Crystal> > G__TvectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR;
static int G__CaloCubeDictionary_573_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) (soff+(sizeof(vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >)*i)))->~G__TvectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*) (soff))->~G__TvectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* CLHEP */

/* CLHEP::Hep3Vector */

/* CaloCube */

/* CaloCube::Position */

/* CaloCube::Particle */

/* CaloCube::Exception */

/* CaloCube::GlobalEvent */

/* CaloCube::Crystal */

/* CaloCube::Ref<CaloCube::Particle> */

/* vector<CaloCube::Particle,allocator<CaloCube::Particle> > */

/* pair<CaloCube::Ref<CaloCube::Particle>,double> */

/* vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > > */

/* vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > > */

/* vector<CaloCube::Crystal,allocator<CaloCube::Crystal> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncCaloCubeDictionary {
 public:
  G__Sizep2memfuncCaloCubeDictionary(): p(&G__Sizep2memfuncCaloCubeDictionary::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncCaloCubeDictionary::*p)();
};

size_t G__get_sizep2memfuncCaloCubeDictionary()
{
  G__Sizep2memfuncCaloCubeDictionary a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceCaloCubeDictionary() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLException))) {
     CaloCube::Exception *G__Lderived;
     G__Lderived=(CaloCube::Exception*)0x1000;
     {
       exception *G__Lpbase=(exception*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLException),G__get_linked_tagnum(&G__CaloCubeDictionaryLN_exception),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableCaloCubeDictionary() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("complex<G4double>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_complexlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("HepThreeVectorD",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEP));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("HepThreeVectorF",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEP));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("G4ThreeVector",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CaloCube::Particle>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle),256,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle),1,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle),257,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<CaloCube::Ref<CaloCube::Particle>,double> >",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<CaloCube::Ref<CaloCube::Particle>,double> >",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR),256,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR),1,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR),257,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<CaloCube::Ref<CaloCube::Particle>,double> >",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CaloCube::Ref<CaloCube::Particle> >",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR),256,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR),1,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR),257,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CaloCube::Crystal>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal),256,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal),1,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal),257,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* CLHEP */
static void G__setup_memvarCLHEP(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEP));
   {
   G__memvar_setup((void*)(&CLHEP::millimeter),100,0,1,-1,-1,-2,1,"millimeter=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::millimeter2),100,0,1,-1,-1,-2,1,"millimeter2=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::millimeter3),100,0,1,-1,-1,-2,1,"millimeter3=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::centimeter),100,0,1,-1,-1,-2,1,"centimeter=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::centimeter2),100,0,1,-1,-1,-2,1,"centimeter2=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::centimeter3),100,0,1,-1,-1,-2,1,"centimeter3=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::meter),100,0,1,-1,-1,-2,1,"meter=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::meter2),100,0,1,-1,-1,-2,1,"meter2=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::meter3),100,0,1,-1,-1,-2,1,"meter3=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::kilometer),100,0,1,-1,-1,-2,1,"kilometer=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::kilometer2),100,0,1,-1,-1,-2,1,"kilometer2=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::kilometer3),100,0,1,-1,-1,-2,1,"kilometer3=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::parsec),100,0,1,-1,-1,-2,1,"parsec=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::micrometer),100,0,1,-1,-1,-2,1,"micrometer=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::nanometer),100,0,1,-1,-1,-2,1,"nanometer=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::angstrom),100,0,1,-1,-1,-2,1,"angstrom=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::fermi),100,0,1,-1,-1,-2,1,"fermi=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::barn),100,0,1,-1,-1,-2,1,"barn=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::millibarn),100,0,1,-1,-1,-2,1,"millibarn=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::microbarn),100,0,1,-1,-1,-2,1,"microbarn=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::nanobarn),100,0,1,-1,-1,-2,1,"nanobarn=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::picobarn),100,0,1,-1,-1,-2,1,"picobarn=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::nm),100,0,1,-1,-1,-2,1,"nm=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::um),100,0,1,-1,-1,-2,1,"um=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::mm),100,0,1,-1,-1,-2,1,"mm=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::mm2),100,0,1,-1,-1,-2,1,"mm2=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::mm3),100,0,1,-1,-1,-2,1,"mm3=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::cm),100,0,1,-1,-1,-2,1,"cm=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::cm2),100,0,1,-1,-1,-2,1,"cm2=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::cm3),100,0,1,-1,-1,-2,1,"cm3=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::m),100,0,1,-1,-1,-2,1,"m=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::m2),100,0,1,-1,-1,-2,1,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::m3),100,0,1,-1,-1,-2,1,"m3=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::km),100,0,1,-1,-1,-2,1,"km=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::km2),100,0,1,-1,-1,-2,1,"km2=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::km3),100,0,1,-1,-1,-2,1,"km3=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::pc),100,0,1,-1,-1,-2,1,"pc=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::radian),100,0,1,-1,-1,-2,1,"radian=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::milliradian),100,0,1,-1,-1,-2,1,"milliradian=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::degree),100,0,1,-1,-1,-2,1,"degree=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::steradian),100,0,1,-1,-1,-2,1,"steradian=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::rad),100,0,1,-1,-1,-2,1,"rad=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::mrad),100,0,1,-1,-1,-2,1,"mrad=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::sr),100,0,1,-1,-1,-2,1,"sr=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::deg),100,0,1,-1,-1,-2,1,"deg=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::nanosecond),100,0,1,-1,-1,-2,1,"nanosecond=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::second),100,0,1,-1,-1,-2,1,"second=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::millisecond),100,0,1,-1,-1,-2,1,"millisecond=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::microsecond),100,0,1,-1,-1,-2,1,"microsecond=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::picosecond),100,0,1,-1,-1,-2,1,"picosecond=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::hertz),100,0,1,-1,-1,-2,1,"hertz=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::kilohertz),100,0,1,-1,-1,-2,1,"kilohertz=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::megahertz),100,0,1,-1,-1,-2,1,"megahertz=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::ns),100,0,1,-1,-1,-2,1,"ns=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::s),100,0,1,-1,-1,-2,1,"s=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::ms),100,0,1,-1,-1,-2,1,"ms=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::eplus),100,0,1,-1,-1,-2,1,"eplus=",0,"positron charge");
   G__memvar_setup((void*)(&CLHEP::e_SI),100,0,1,-1,-1,-2,1,"e_SI=",0,"positron charge in coulomb");
   G__memvar_setup((void*)(&CLHEP::coulomb),100,0,1,-1,-1,-2,1,"coulomb=",0,"coulomb = 6.24150 e+18 * eplus");
   G__memvar_setup((void*)(&CLHEP::megaelectronvolt),100,0,1,-1,-1,-2,1,"megaelectronvolt=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::electronvolt),100,0,1,-1,-1,-2,1,"electronvolt=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::kiloelectronvolt),100,0,1,-1,-1,-2,1,"kiloelectronvolt=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::gigaelectronvolt),100,0,1,-1,-1,-2,1,"gigaelectronvolt=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::teraelectronvolt),100,0,1,-1,-1,-2,1,"teraelectronvolt=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::petaelectronvolt),100,0,1,-1,-1,-2,1,"petaelectronvolt=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::joule),100,0,1,-1,-1,-2,1,"joule=",0,"joule = 6.24150 e+12 * MeV");
   G__memvar_setup((void*)(&CLHEP::MeV),100,0,1,-1,-1,-2,1,"MeV=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::eV),100,0,1,-1,-1,-2,1,"eV=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::keV),100,0,1,-1,-1,-2,1,"keV=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::GeV),100,0,1,-1,-1,-2,1,"GeV=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::TeV),100,0,1,-1,-1,-2,1,"TeV=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::PeV),100,0,1,-1,-1,-2,1,"PeV=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::kilogram),100,0,1,-1,-1,-2,1,"kilogram=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::gram),100,0,1,-1,-1,-2,1,"gram=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::milligram),100,0,1,-1,-1,-2,1,"milligram=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::kg),100,0,1,-1,-1,-2,1,"kg=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::g),100,0,1,-1,-1,-2,1,"g=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::mg),100,0,1,-1,-1,-2,1,"mg=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::watt),100,0,1,-1,-1,-2,1,"watt=",0,"watt = 6.24150 e+3 * MeV/ns");
   G__memvar_setup((void*)(&CLHEP::newton),100,0,1,-1,-1,-2,1,"newton=",0,"newton = 6.24150 e+9 * MeV/mm");
   G__memvar_setup((void*)(&CLHEP::hep_pascal),100,0,1,-1,-1,-2,1,"hep_pascal=",0,"pascal = 6.24150 e+3 * MeV/mm3");
   G__memvar_setup((void*)(&CLHEP::bar),100,0,1,-1,-1,-2,1,"bar=",0,"bar    = 6.24150 e+8 * MeV/mm3");
   G__memvar_setup((void*)(&CLHEP::atmosphere),100,0,1,-1,-1,-2,1,"atmosphere=",0,"atm    = 6.32420 e+8 * MeV/mm3");
   G__memvar_setup((void*)(&CLHEP::ampere),100,0,1,-1,-1,-2,1,"ampere=",0,"ampere = 6.24150 e+9 * eplus/ns");
   G__memvar_setup((void*)(&CLHEP::milliampere),100,0,1,-1,-1,-2,1,"milliampere=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::microampere),100,0,1,-1,-1,-2,1,"microampere=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::nanoampere),100,0,1,-1,-1,-2,1,"nanoampere=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::megavolt),100,0,1,-1,-1,-2,1,"megavolt=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::kilovolt),100,0,1,-1,-1,-2,1,"kilovolt=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::volt),100,0,1,-1,-1,-2,1,"volt=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::ohm),100,0,1,-1,-1,-2,1,"ohm=",0,"ohm = 1.60217e-16*(MeV/eplus)/(eplus/ns)");
   G__memvar_setup((void*)(&CLHEP::farad),100,0,1,-1,-1,-2,1,"farad=",0,"farad = 6.24150e+24 * eplus/Megavolt");
   G__memvar_setup((void*)(&CLHEP::millifarad),100,0,1,-1,-1,-2,1,"millifarad=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::microfarad),100,0,1,-1,-1,-2,1,"microfarad=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::nanofarad),100,0,1,-1,-1,-2,1,"nanofarad=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::picofarad),100,0,1,-1,-1,-2,1,"picofarad=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::weber),100,0,1,-1,-1,-2,1,"weber=",0,"weber = 1000*megavolt*ns");
   G__memvar_setup((void*)(&CLHEP::tesla),100,0,1,-1,-1,-2,1,"tesla=",0,"tesla =0.001*megavolt*ns/mm2");
   G__memvar_setup((void*)(&CLHEP::gauss),100,0,1,-1,-1,-2,1,"gauss=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::kilogauss),100,0,1,-1,-1,-2,1,"kilogauss=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::henry),100,0,1,-1,-1,-2,1,"henry=",0,"henry = 1.60217e-7*MeV*(ns/eplus)**2");
   G__memvar_setup((void*)(&CLHEP::kelvin),100,0,1,-1,-1,-2,1,"kelvin=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::mole),100,0,1,-1,-1,-2,1,"mole=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::becquerel),100,0,1,-1,-1,-2,1,"becquerel=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::curie),100,0,1,-1,-1,-2,1,"curie=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::gray),100,0,1,-1,-1,-2,1,"gray=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::kilogray),100,0,1,-1,-1,-2,1,"kilogray=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::milligray),100,0,1,-1,-1,-2,1,"milligray=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::microgray),100,0,1,-1,-1,-2,1,"microgray=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::candela),100,0,1,-1,-1,-2,1,"candela=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::lumen),100,0,1,-1,-1,-2,1,"lumen=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::lux),100,0,1,-1,-1,-2,1,"lux=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::perCent),100,0,1,-1,-1,-2,1,"perCent=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::perThousand),100,0,1,-1,-1,-2,1,"perThousand=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::perMillion),100,0,1,-1,-1,-2,1,"perMillion=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::pi),100,0,1,-1,-1,-2,1,"pi=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::twopi),100,0,1,-1,-1,-2,1,"twopi=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::halfpi),100,0,1,-1,-1,-2,1,"halfpi=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::pi2),100,0,1,-1,-1,-2,1,"pi2=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::Avogadro),100,0,1,-1,-1,-2,1,"Avogadro=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::c_light),100,0,1,-1,-1,-2,1,"c_light=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::c_squared),100,0,1,-1,-1,-2,1,"c_squared=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::h_Planck),100,0,1,-1,-1,-2,1,"h_Planck=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::hbar_Planck),100,0,1,-1,-1,-2,1,"hbar_Planck=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::hbarc),100,0,1,-1,-1,-2,1,"hbarc=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::hbarc_squared),100,0,1,-1,-1,-2,1,"hbarc_squared=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::electron_charge),100,0,1,-1,-1,-2,1,"electron_charge=",0,"see SystemOfUnits.h");
   G__memvar_setup((void*)(&CLHEP::e_squared),100,0,1,-1,-1,-2,1,"e_squared=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::electron_mass_c2),100,0,1,-1,-1,-2,1,"electron_mass_c2=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::proton_mass_c2),100,0,1,-1,-1,-2,1,"proton_mass_c2=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::neutron_mass_c2),100,0,1,-1,-1,-2,1,"neutron_mass_c2=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::amu_c2),100,0,1,-1,-1,-2,1,"amu_c2=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::amu),100,0,1,-1,-1,-2,1,"amu=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::mu0),100,0,1,-1,-1,-2,1,"mu0=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::epsilon0),100,0,1,-1,-1,-2,1,"epsilon0=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::elm_coupling),100,0,1,-1,-1,-2,1,"elm_coupling=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::fine_structure_const),100,0,1,-1,-1,-2,1,"fine_structure_const=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::classic_electr_radius),100,0,1,-1,-1,-2,1,"classic_electr_radius=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::electron_Compton_length),100,0,1,-1,-1,-2,1,"electron_Compton_length=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::Bohr_radius),100,0,1,-1,-1,-2,1,"Bohr_radius=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::alpha_rcl2),100,0,1,-1,-1,-2,1,"alpha_rcl2=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::twopi_mc2_rcl2),100,0,1,-1,-1,-2,1,"twopi_mc2_rcl2=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::k_Boltzmann),100,0,1,-1,-1,-2,1,"k_Boltzmann=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::STP_Temperature),100,0,1,-1,-1,-2,1,"STP_Temperature=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::STP_Pressure),100,0,1,-1,-1,-2,1,"STP_Pressure=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::kGasThreshold),100,0,1,-1,-1,-2,1,"kGasThreshold=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::universe_mean_density),100,0,1,-1,-1,-2,1,"universe_mean_density=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::HepXHat),117,0,1,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector),-1,-1,1,"HepXHat=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::HepYHat),117,0,1,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector),-1,-1,1,"HepYHat=",0,(char*)NULL);
   G__memvar_setup((void*)(&CLHEP::HepZHat),117,0,1,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector),-1,-1,1,"HepZHat=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CLHEP::Hep3Vector */
static void G__setup_memvarCLHEPcLcLHep3Vector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector));
   { CLHEP::Hep3Vector *p; p=(CLHEP::Hep3Vector*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3VectorcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("X=%lldLL",(long long)CLHEP::Hep3Vector::X).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3VectorcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("Y=%lldLL",(long long)CLHEP::Hep3Vector::Y).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3VectorcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("Z=%lldLL",(long long)CLHEP::Hep3Vector::Z).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3VectorcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("NUM_COORDINATES=%lldLL",(long long)CLHEP::Hep3Vector::NUM_COORDINATES).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3VectorcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("SIZE=%lldLL",(long long)CLHEP::Hep3Vector::SIZE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3VectorcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("ToleranceTicks=%lldLL",(long long)CLHEP::Hep3Vector::ToleranceTicks).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"dx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"dy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"dz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-2,2,"tolerance=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CaloCube */
static void G__setup_memvarCaloCube(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCube));
   {
   }
   G__tag_memvar_reset();
}


   /* CaloCube::Position */
static void G__setup_memvarCaloCubecLcLPosition(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLPosition));
   { CaloCube::Position *p; p=(CaloCube::Position*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_z=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CaloCube::Particle */
static void G__setup_memvarCaloCubecLcLParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle));
   { CaloCube::Particle *p; p=(CaloCube::Particle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_string),-1,-1,4,"_name=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_string),-1,-1,4,"_creatorProcess=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_totalEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector),G__defined_typename("G4ThreeVector"),-1,4,"_momentum=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLPosition),-1,-1,4,"_pos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_G4Track),-1,-1,4,"_track=",0,"! transient value");
   }
   G__tag_memvar_reset();
}


   /* CaloCube::Exception */
static void G__setup_memvarCaloCubecLcLException(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLException));
   { CaloCube::Exception *p; p=(CaloCube::Exception*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,1,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_string),-1,-1,4,"_cathegory=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_string),-1,-1,4,"message=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CaloCube::GlobalEvent */
static void G__setup_memvarCaloCubecLcLGlobalEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLGlobalEvent));
   { CaloCube::GlobalEvent *p; p=(CaloCube::GlobalEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-2,4,"_eventNumber=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CaloCube::Crystal */
static void G__setup_memvarCaloCubecLcLCrystal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal));
   { CaloCube::Crystal *p; p=(CaloCube::Crystal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLPosition),-1,-1,4,"_pos=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_string),-1,-1,4,"_material=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_totalEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR),G__defined_typename("vector<std::pair<CaloCube::Ref<CaloCube::Particle>,double> >"),-1,4,"_allParticlesOriginatingHere=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR),G__defined_typename("vector<std::pair<CaloCube::Ref<CaloCube::Particle>,double> >"),-1,4,"_allParticlesPassingHere=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR),G__defined_typename("vector<std::pair<CaloCube::Ref<CaloCube::Particle>,double> >"),-1,4,"_allPiOOriginatingHere=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CaloCube::Ref<CaloCube::Particle> */
static void G__setup_memvarCaloCubecLcLReflECaloCubecLcLParticlegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR));
   { CaloCube::Ref<CaloCube::Particle> *p; p=(CaloCube::Ref<CaloCube::Particle>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_string),-1,-1,4,"_treeName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_string),-1,-1,4,"_branchName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-2,4,"_lastevent=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"_index=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR),G__defined_typename("vector<CaloCube::Particle>"),-2,4,"_container=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<CaloCube::Particle,allocator<CaloCube::Particle> > */
static void G__setup_memvarvectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR));
   { vector<CaloCube::Particle,allocator<CaloCube::Particle> > *p; p=(vector<CaloCube::Particle,allocator<CaloCube::Particle> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* pair<CaloCube::Ref<CaloCube::Particle>,double> */
static void G__setup_memvarpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR));
   { pair<CaloCube::Ref<CaloCube::Particle>,double> *p; p=(pair<CaloCube::Ref<CaloCube::Particle>,double>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),100,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > > */
static void G__setup_memvarvectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR));
   { vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > > *p; p=(vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > > */
static void G__setup_memvarvectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR));
   { vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > > *p; p=(vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<CaloCube::Crystal,allocator<CaloCube::Crystal> > */
static void G__setup_memvarvectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR));
   { vector<CaloCube::Crystal,allocator<CaloCube::Crystal> > *p; p=(vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarCaloCubeDictionary() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncCLHEP(void) {
   /* CLHEP */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEP));
   G__memfunc_setup("rotationXOf",1149,G__CaloCubeDictionary_194_0_1, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 2, 1, 1, 0, 
"u 'CLHEP::Hep3Vector' - 11 - vec d - - 0 - delta", (char*)NULL, (void*) G__func2void( (CLHEP::Hep3Vector (*)(const CLHEP::Hep3Vector&, double))(&CLHEP::rotationXOf) ), 0);
   G__memfunc_setup("rotationYOf",1150,G__CaloCubeDictionary_194_0_2, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 2, 1, 1, 0, 
"u 'CLHEP::Hep3Vector' - 11 - vec d - - 0 - delta", (char*)NULL, (void*) G__func2void( (CLHEP::Hep3Vector (*)(const CLHEP::Hep3Vector&, double))(&CLHEP::rotationYOf) ), 0);
   G__memfunc_setup("rotationZOf",1151,G__CaloCubeDictionary_194_0_3, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 2, 1, 1, 0, 
"u 'CLHEP::Hep3Vector' - 11 - vec d - - 0 - delta", (char*)NULL, (void*) G__func2void( (CLHEP::Hep3Vector (*)(const CLHEP::Hep3Vector&, double))(&CLHEP::rotationZOf) ), 0);
   G__memfunc_setup("rotationOf",1061,G__CaloCubeDictionary_194_0_4, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 3, 1, 1, 0, 
"u 'CLHEP::Hep3Vector' - 11 - vec u 'CLHEP::Hep3Vector' - 11 - axis "
"d - - 0 - delta", (char*)NULL, (void*) G__func2void( (CLHEP::Hep3Vector (*)(const CLHEP::Hep3Vector&, const CLHEP::Hep3Vector&, double))(&CLHEP::rotationOf) ), 0);
   G__memfunc_setup("rotationOf",1061,G__CaloCubeDictionary_194_0_5, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 2, 1, 1, 0, 
"u 'CLHEP::Hep3Vector' - 11 - vec u 'CLHEP::HepAxisAngle' - 11 - ax", (char*)NULL, (void*) G__func2void( (CLHEP::Hep3Vector (*)(const CLHEP::Hep3Vector&, const CLHEP::HepAxisAngle&))(&CLHEP::rotationOf) ), 0);
   G__memfunc_setup("rotationOf",1061,G__CaloCubeDictionary_194_0_6, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 4, 1, 1, 0, 
"u 'CLHEP::Hep3Vector' - 11 - vec d - - 0 - phi "
"d - - 0 - theta d - - 0 - psi", (char*)NULL, (void*) G__func2void( (CLHEP::Hep3Vector (*)(const CLHEP::Hep3Vector&, double, double, double))(&CLHEP::rotationOf) ), 0);
   G__memfunc_setup("rotationOf",1061,G__CaloCubeDictionary_194_0_7, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 2, 1, 1, 0, 
"u 'CLHEP::Hep3Vector' - 11 - vec u 'CLHEP::HepEulerAngles' - 11 - e", (char*)NULL, (void*) G__func2void( (CLHEP::Hep3Vector (*)(const CLHEP::Hep3Vector&, const CLHEP::HepEulerAngles&))(&CLHEP::rotationOf) ), 0);
   G__memfunc_setup("operator<<",996,G__CaloCubeDictionary_194_0_8, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - - u 'CLHEP::Hep3Vector' - 11 - -", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const CLHEP::Hep3Vector&))(&CLHEP::operator<<) ), 0);
   G__memfunc_setup("operator>>",1000,G__CaloCubeDictionary_194_0_9, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_basic_istreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("istream"), 1, 2, 1, 1, 0, 
"u 'basic_istream<char,char_traits<char> >' 'istream' 1 - - u 'CLHEP::Hep3Vector' - 1 - -", (char*)NULL, (void*) G__func2void( (istream& (*)(istream&, CLHEP::Hep3Vector&))(&CLHEP::operator>>) ), 0);
   G__memfunc_setup("operator/",923,G__CaloCubeDictionary_194_0_10, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 2, 1, 1, 0, 
"u 'CLHEP::Hep3Vector' - 11 - - d - - 0 - a", (char*)NULL, (void*) G__func2void( (CLHEP::Hep3Vector (*)(const CLHEP::Hep3Vector&, double))(&CLHEP::operator/) ), 0);
   G__memfunc_setup("operator+",919,G__CaloCubeDictionary_194_0_11, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 2, 1, 1, 0, 
"u 'CLHEP::Hep3Vector' - 11 - a u 'CLHEP::Hep3Vector' - 11 - b", (char*)NULL, (void*) G__func2void( (CLHEP::Hep3Vector (*)(const CLHEP::Hep3Vector&, const CLHEP::Hep3Vector&))(&CLHEP::operator+) ), 0);
   G__memfunc_setup("operator-",921,G__CaloCubeDictionary_194_0_12, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 2, 1, 1, 0, 
"u 'CLHEP::Hep3Vector' - 11 - a u 'CLHEP::Hep3Vector' - 11 - b", (char*)NULL, (void*) G__func2void( (CLHEP::Hep3Vector (*)(const CLHEP::Hep3Vector&, const CLHEP::Hep3Vector&))(&CLHEP::operator-) ), 0);
   G__memfunc_setup("operator*",918,G__CaloCubeDictionary_194_0_13, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'CLHEP::Hep3Vector' - 11 - a u 'CLHEP::Hep3Vector' - 11 - b", (char*)NULL, (void*) G__func2void( (double (*)(const CLHEP::Hep3Vector&, const CLHEP::Hep3Vector&))(&CLHEP::operator*) ), 0);
   G__memfunc_setup("operator*",918,G__CaloCubeDictionary_194_0_14, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 2, 1, 1, 0, 
"u 'CLHEP::Hep3Vector' - 11 - p d - - 0 - a", (char*)NULL, (void*) G__func2void( (CLHEP::Hep3Vector (*)(const CLHEP::Hep3Vector&, double))(&CLHEP::operator*) ), 0);
   G__memfunc_setup("operator*",918,G__CaloCubeDictionary_194_0_15, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 2, 1, 1, 0, 
"d - - 0 - a u 'CLHEP::Hep3Vector' - 11 - p", (char*)NULL, (void*) G__func2void( (CLHEP::Hep3Vector (*)(double, const CLHEP::Hep3Vector&))(&CLHEP::operator*) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCLHEPcLcLHep3Vector(void) {
   /* CLHEP::Hep3Vector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector));
   G__memfunc_setup("Hep3Vector",963,G__CaloCubeDictionary_199_0_1, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hep3Vector",963,G__CaloCubeDictionary_199_0_2, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 1, 5, 1, 0, "d - - 0 - x1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hep3Vector",963,G__CaloCubeDictionary_199_0_3, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 2, 1, 1, 0, 
"d - - 0 - x1 d - - 0 - y1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hep3Vector",963,G__CaloCubeDictionary_199_0_4, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 3, 1, 1, 0, 
"d - - 0 - x1 d - - 0 - y1 "
"d - - 0 - z1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hep3Vector",963,G__CaloCubeDictionary_199_0_5, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__CaloCubeDictionary_199_0_6, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__CaloCubeDictionary_199_0_7, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__CaloCubeDictionary_199_0_8, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__CaloCubeDictionary_199_0_9, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__CaloCubeDictionary_199_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__CaloCubeDictionary_199_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__CaloCubeDictionary_199_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setX",420,G__CaloCubeDictionary_199_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setY",421,G__CaloCubeDictionary_199_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - y1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZ",422,G__CaloCubeDictionary_199_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - z1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__CaloCubeDictionary_199_0_16, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x1 d - - 0 - y1 "
"d - - 0 - z1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__CaloCubeDictionary_199_0_17, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__CaloCubeDictionary_199_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cosTheta",827,G__CaloCubeDictionary_199_0_19, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cos2Theta",877,G__CaloCubeDictionary_199_0_20, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mag2",359,G__CaloCubeDictionary_199_0_21, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mag",309,G__CaloCubeDictionary_199_0_22, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPhi",621,G__CaloCubeDictionary_199_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - ph", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTheta",834,G__CaloCubeDictionary_199_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - th", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMag",609,G__CaloCubeDictionary_199_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perp2",489,G__CaloCubeDictionary_199_0_26, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perp",439,G__CaloCubeDictionary_199_0_27, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPerp",739,G__CaloCubeDictionary_199_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - r1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCylTheta",1130,G__CaloCubeDictionary_199_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perp2",489,G__CaloCubeDictionary_199_0_30, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perp",439,G__CaloCubeDictionary_199_0_31, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__CaloCubeDictionary_199_0_32, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__CaloCubeDictionary_199_0_33, 103, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__CaloCubeDictionary_199_0_34, 103, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isNear",610,G__CaloCubeDictionary_199_0_35, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'CLHEP::Hep3Vector' - 11 - - d - - 0 'tolerance' epsilon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("howNear",724,G__CaloCubeDictionary_199_0_36, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deltaR",604,G__CaloCubeDictionary_199_0_37, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__CaloCubeDictionary_199_0_38, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__CaloCubeDictionary_199_0_39, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__CaloCubeDictionary_199_0_40, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__CaloCubeDictionary_199_0_41, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "d - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__CaloCubeDictionary_199_0_42, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("unit",448,G__CaloCubeDictionary_199_0_43, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("orthogonal",1085,G__CaloCubeDictionary_199_0_44, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dot",327,G__CaloCubeDictionary_199_0_45, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cross",554,G__CaloCubeDictionary_199_0_46, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("angle",519,G__CaloCubeDictionary_199_0_47, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pseudoRapidity",1494,G__CaloCubeDictionary_199_0_48, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEta",614,G__CaloCubeDictionary_199_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCylEta",910,G__CaloCubeDictionary_199_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotateX",743,G__CaloCubeDictionary_199_0_51, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotateY",744,G__CaloCubeDictionary_199_0_52, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotateZ",745,G__CaloCubeDictionary_199_0_53, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotateUz",862,G__CaloCubeDictionary_199_0_54, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotate",655,G__CaloCubeDictionary_199_0_55, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 1, 2, 1, 1, 0, 
"d - - 0 - - u 'CLHEP::Hep3Vector' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__CaloCubeDictionary_199_0_56, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "u 'CLHEP::HepRotation' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("transform",988,G__CaloCubeDictionary_199_0_57, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "u 'CLHEP::HepRotation' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRThetaPhi",1205,G__CaloCubeDictionary_199_0_58, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - r1 d - - 0 - theta1 "
"d - - 0 - phi1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setREtaPhi",985,G__CaloCubeDictionary_199_0_59, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - r1 d - - 0 - eta1 "
"d - - 0 - phi1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRhoPhiZ",1008,G__CaloCubeDictionary_199_0_60, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - rho1 d - - 0 - phi1 "
"d - - 0 - z1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRhoPhiTheta",1420,G__CaloCubeDictionary_199_0_61, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - rho d - - 0 - phi "
"d - - 0 - theta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRhoPhiEta",1200,G__CaloCubeDictionary_199_0_62, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - rho d - - 0 - phi "
"d - - 0 - eta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getX",408,G__CaloCubeDictionary_199_0_63, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getY",409,G__CaloCubeDictionary_199_0_64, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZ",410,G__CaloCubeDictionary_199_0_65, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getR",402,G__CaloCubeDictionary_199_0_66, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTheta",822,G__CaloCubeDictionary_199_0_67, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPhi",609,G__CaloCubeDictionary_199_0_68, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("r",114,G__CaloCubeDictionary_199_0_69, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rho",329,G__CaloCubeDictionary_199_0_70, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRho",617,G__CaloCubeDictionary_199_0_71, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__CaloCubeDictionary_199_0_72, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEta",602,G__CaloCubeDictionary_199_0_73, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setR",414,G__CaloCubeDictionary_199_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - r1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRho",629,G__CaloCubeDictionary_199_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - rho1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("compare",743,G__CaloCubeDictionary_199_0_76, 105, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__CaloCubeDictionary_199_0_77, 103, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__CaloCubeDictionary_199_0_78, 103, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>=",999,G__CaloCubeDictionary_199_0_79, 103, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<=",997,G__CaloCubeDictionary_199_0_80, 103, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("diff2",459,G__CaloCubeDictionary_199_0_81, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTolerance",1257,G__CaloCubeDictionary_199_0_82, 100, -1, -1, 0, 1, 3, 1, 0, "d - - 0 - tol", (char*)NULL, (void*) G__func2void( (double (*)(double))(&CLHEP::Hep3Vector::setTolerance) ), 0);
   G__memfunc_setup("getTolerance",1245,G__CaloCubeDictionary_199_0_83, 100, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (double (*)())(&CLHEP::Hep3Vector::getTolerance) ), 0);
   G__memfunc_setup("isParallel",1033,G__CaloCubeDictionary_199_0_84, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'CLHEP::Hep3Vector' - 11 - v d - - 0 'tolerance' epsilon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isOrthogonal",1273,G__CaloCubeDictionary_199_0_85, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'CLHEP::Hep3Vector' - 11 - v d - - 0 'tolerance' epsilon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("howParallel",1147,G__CaloCubeDictionary_199_0_86, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("howOrthogonal",1387,G__CaloCubeDictionary_199_0_87, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("beta",412,G__CaloCubeDictionary_199_0_88, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("gamma",515,G__CaloCubeDictionary_199_0_89, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("coLinearRapidity",1651,G__CaloCubeDictionary_199_0_90, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("angle",519,G__CaloCubeDictionary_199_0_91, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__CaloCubeDictionary_199_0_92, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cosTheta",827,G__CaloCubeDictionary_199_0_93, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cos2Theta",877,G__CaloCubeDictionary_199_0_94, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("project",759,G__CaloCubeDictionary_199_0_95, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("project",759,G__CaloCubeDictionary_199_0_96, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perpPart",846,G__CaloCubeDictionary_199_0_97, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perpPart",846,G__CaloCubeDictionary_199_0_98, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rapidity",870,G__CaloCubeDictionary_199_0_99, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rapidity",870,G__CaloCubeDictionary_199_0_100, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__CaloCubeDictionary_199_0_101, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("polarAngle",1029,G__CaloCubeDictionary_199_0_102, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deltaPhi",811,G__CaloCubeDictionary_199_0_103, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("azimAngle",920,G__CaloCubeDictionary_199_0_104, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("polarAngle",1029,G__CaloCubeDictionary_199_0_105, 100, -1, -1, 0, 2, 1, 1, 8, 
"u 'CLHEP::Hep3Vector' - 11 - v2 u 'CLHEP::Hep3Vector' - 11 - ref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("azimAngle",920,G__CaloCubeDictionary_199_0_106, 100, -1, -1, 0, 2, 1, 1, 8, 
"u 'CLHEP::Hep3Vector' - 11 - v2 u 'CLHEP::Hep3Vector' - 11 - ref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotate",655,G__CaloCubeDictionary_199_0_107, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 1, 2, 1, 1, 0, 
"u 'CLHEP::Hep3Vector' - 11 - axis d - - 0 - delta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotate",655,G__CaloCubeDictionary_199_0_108, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "u 'CLHEP::HepAxisAngle' - 11 - ax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotate",655,G__CaloCubeDictionary_199_0_109, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "u 'CLHEP::HepEulerAngles' - 11 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotate",655,G__CaloCubeDictionary_199_0_110, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), -1, 1, 3, 1, 1, 0, 
"d - - 0 - phi d - - 0 - theta "
"d - - 0 - psi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSpherical",1255,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"d - - 0 - r d - - 0 - theta "
"d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCylindrical",1466,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"d - - 0 - r d - - 0 - phi "
"d - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("negativeInfinity",1693,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Hep3Vector", 1089, G__CaloCubeDictionary_199_0_114, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCaloCube(void) {
   /* CaloCube */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCube));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCaloCubecLcLPosition(void) {
   /* CaloCube::Position */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLPosition));
   G__memfunc_setup("Position",853,G__CaloCubeDictionary_202_0_1, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLPosition), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Position",853,G__CaloCubeDictionary_202_0_2, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLPosition), -1, 0, 3, 1, 1, 0, 
"i - - 0 - x i - - 0 - y "
"i - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getX",408,G__CaloCubeDictionary_202_0_3, 105, -1, -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getY",409,G__CaloCubeDictionary_202_0_4, 105, -1, -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZ",410,G__CaloCubeDictionary_202_0_5, 105, -1, -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__CaloCubeDictionary_202_0_6, 103, -1, -1, 0, 1, 1, 1, 8, "u 'CaloCube::Position' - 11 - other", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Position", 853, G__CaloCubeDictionary_202_0_7, (int) ('i'), G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLPosition), -1, 0, 1, 1, 1, 0, "u 'CaloCube::Position' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Position", 979, G__CaloCubeDictionary_202_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CaloCubeDictionary_202_0_9, (int) ('u'), G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLPosition), -1, 1, 1, 1, 1, 0, "u 'CaloCube::Position' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCaloCubecLcLParticle(void) {
   /* CaloCube::Particle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle));
   G__memfunc_setup("Particle",820,G__CaloCubeDictionary_204_0_1, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Particle",820,G__CaloCubeDictionary_204_0_2, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle), -1, 0, 7, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 - creatorProcess "
"d - - 0 - energy u 'CLHEP::Hep3Vector' 'G4ThreeVector' 0 - momentum "
"i - - 0 - x i - - 0 - y "
"i - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getName",705,G__CaloCubeDictionary_204_0_3, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCreatorProcess",1775,G__CaloCubeDictionary_204_0_4, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTotalEnergy",1454,G__CaloCubeDictionary_204_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMomentum",1170,G__CaloCubeDictionary_204_0_6, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector), G__defined_typename("G4ThreeVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,G__CaloCubeDictionary_204_0_7, 85, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_G4Track), -1, 0, 0, 1, 1, 9, "", "! transient", (void*) NULL, 0);
   G__memfunc_setup("getPositionOfOrigin",1970,G__CaloCubeDictionary_204_0_8, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLPosition), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__CaloCubeDictionary_204_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'G4Track' - 10 - track", "! transient", (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Particle", 820, G__CaloCubeDictionary_204_0_10, (int) ('i'), G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle), -1, 0, 1, 1, 1, 0, "u 'CaloCube::Particle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Particle", 946, G__CaloCubeDictionary_204_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCaloCubecLcLException(void) {
   /* CaloCube::Exception */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLException));
   G__memfunc_setup("Exception",943,G__CaloCubeDictionary_209_0_1, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLException), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - cathegory", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("what",436,G__CaloCubeDictionary_209_0_2, 67, -1, -1, 0, 0, 1, 1, 41, "", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("Exception", 943, G__CaloCubeDictionary_209_0_3, (int) ('i'), G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLException), -1, 0, 1, 1, 1, 0, "u 'CaloCube::Exception' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Exception", 1069, G__CaloCubeDictionary_209_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCaloCubecLcLGlobalEvent(void) {
   /* CaloCube::GlobalEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLGlobalEvent));
   G__memfunc_setup("getEventNumber",1451,G__CaloCubeDictionary_210_0_1, 104, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (unsigned int (*)())(&CaloCube::GlobalEvent::getEventNumber) ), 0);
   G__memfunc_setup("setEventNumber",1463,G__CaloCubeDictionary_210_0_2, 121, -1, -1, 0, 1, 3, 1, 0, "h - - 0 - event", (char*)NULL, (void*) G__func2void( (void (*)(unsigned int))(&CaloCube::GlobalEvent::setEventNumber) ), 0);
   // automatic default constructor
   G__memfunc_setup("GlobalEvent", 1107, G__CaloCubeDictionary_210_0_3, (int) ('i'), G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLGlobalEvent), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("GlobalEvent", 1107, G__CaloCubeDictionary_210_0_4, (int) ('i'), G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLGlobalEvent), -1, 0, 1, 1, 1, 0, "u 'CaloCube::GlobalEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GlobalEvent", 1233, G__CaloCubeDictionary_210_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CaloCubeDictionary_210_0_6, (int) ('u'), G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLGlobalEvent), -1, 1, 1, 1, 1, 0, "u 'CaloCube::GlobalEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCaloCubecLcLCrystal(void) {
   /* CaloCube::Crystal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal));
   G__memfunc_setup("Crystal",738,G__CaloCubeDictionary_557_0_1, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Crystal",738,G__CaloCubeDictionary_557_0_2, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal), -1, 0, 4, 1, 1, 0, 
"i - - 0 - x i - - 0 - y "
"i - - 0 - z u 'string' - 0 - material", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPosition",1173,G__CaloCubeDictionary_557_0_3, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLPosition), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaterial",1135,G__CaloCubeDictionary_557_0_4, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTotalEnergy",1454,G__CaloCubeDictionary_557_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAllParticlesBornHere",2325,G__CaloCubeDictionary_557_0_6, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR), G__defined_typename("vector<std::pair<CaloCube::Ref<CaloCube::Particle>,double> >"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAllParticlesPassingHere",2649,G__CaloCubeDictionary_557_0_7, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR), G__defined_typename("vector<std::pair<CaloCube::Ref<CaloCube::Particle>,double> >"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAllPi0PassingHere",1947,G__CaloCubeDictionary_557_0_8, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR), G__defined_typename("vector<std::pair<CaloCube::Ref<CaloCube::Particle>,double> >"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addParticlePassingHere",2230,G__CaloCubeDictionary_557_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'CaloCube::Ref<CaloCube::Particle>' - 11 - ref d - - 0 - energyDeposit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addParticleOriginatingHere",2652,G__CaloCubeDictionary_557_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'CaloCube::Ref<CaloCube::Particle>' - 11 - ref d - - 0 - energyDeposit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addPi0OriginatingHere",2065,G__CaloCubeDictionary_557_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'CaloCube::Ref<CaloCube::Particle>' - 11 - ref d - - 0 - energyDeposit", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Crystal", 738, G__CaloCubeDictionary_557_0_12, (int) ('i'), G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal), -1, 0, 1, 1, 1, 0, "u 'CaloCube::Crystal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Crystal", 864, G__CaloCubeDictionary_557_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CaloCubeDictionary_557_0_14, (int) ('u'), G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal), -1, 1, 1, 1, 1, 0, "u 'CaloCube::Crystal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCaloCubecLcLReflECaloCubecLcLParticlegR(void) {
   /* CaloCube::Ref<CaloCube::Particle> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR));
   G__memfunc_setup("Ref<CaloCube::Particle>",2109,G__CaloCubeDictionary_558_0_1, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ref<CaloCube::Particle>",2109,G__CaloCubeDictionary_558_0_2, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR), -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - treeName u 'string' - 0 - branchName "
"h - - 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get",320,G__CaloCubeDictionary_558_0_3, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Ref<CaloCube::Particle>", 2109, G__CaloCubeDictionary_558_0_4, (int) ('i'), 
G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR), -1, 0, 1, 1, 1, 0, "u 'CaloCube::Ref<CaloCube::Particle>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Ref<CaloCube::Particle>", 2235, G__CaloCubeDictionary_558_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CaloCubeDictionary_558_0_6, (int) ('u'), G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR), -1, 1, 1, 1, 1, 0, "u 'CaloCube::Ref<CaloCube::Particle>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR(void) {
   /* vector<CaloCube::Particle,allocator<CaloCube::Particle> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR));
   G__memfunc_setup("at",213,G__CaloCubeDictionary_560_0_1, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle), G__defined_typename("vector<CaloCube::Particle,allocator<CaloCube::Particle> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__CaloCubeDictionary_560_0_2, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle), G__defined_typename("vector<CaloCube::Particle,allocator<CaloCube::Particle> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__CaloCubeDictionary_560_0_3, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__CaloCubeDictionary_560_0_4, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__CaloCubeDictionary_560_0_5, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgRcLcLiteratorgR), G__defined_typename("vector<CaloCube::Particle,allocator<CaloCube::Particle> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__CaloCubeDictionary_560_0_6, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgRcLcLiteratorgR), G__defined_typename("vector<CaloCube::Particle,allocator<CaloCube::Particle> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__CaloCubeDictionary_560_0_7, 107, -1, G__defined_typename("vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__CaloCubeDictionary_560_0_8, 107, -1, G__defined_typename("vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__CaloCubeDictionary_560_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__CaloCubeDictionary_560_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type' 0 - sz u 'CaloCube::Particle' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__CaloCubeDictionary_560_0_11, 107, -1, G__defined_typename("vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__CaloCubeDictionary_560_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__CaloCubeDictionary_560_0_13, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle), G__defined_typename("vector<CaloCube::Particle,allocator<CaloCube::Particle> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__CaloCubeDictionary_560_0_14, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle), G__defined_typename("vector<CaloCube::Particle,allocator<CaloCube::Particle> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<CaloCube::Particle,allocator<CaloCube::Particle> >",5344,G__CaloCubeDictionary_560_0_15, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<CaloCube::Particle,allocator<CaloCube::Particle> >",5344,G__CaloCubeDictionary_560_0_16, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type' 0 - n u 'CaloCube::Particle' - 11 'CaloCube::Particle()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<CaloCube::Particle,allocator<CaloCube::Particle> >",5344,G__CaloCubeDictionary_560_0_17, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<CaloCube::Particle,allocator<CaloCube::Particle> >",5344,G__CaloCubeDictionary_560_0_18, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator' 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::const_iterator' 10 - first u 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator' 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__CaloCubeDictionary_560_0_19, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__CaloCubeDictionary_560_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__CaloCubeDictionary_560_0_21, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__CaloCubeDictionary_560_0_22, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__CaloCubeDictionary_560_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CaloCube::Particle' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__CaloCubeDictionary_560_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__CaloCubeDictionary_560_0_25, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator' - 0 - position u 'CaloCube::Particle' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__CaloCubeDictionary_560_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator' - 0 - position u 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator' 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::const_iterator' 10 - first "
"u 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator' 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__CaloCubeDictionary_560_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator' - 0 - position k - 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::size_type' 0 - n "
"u 'CaloCube::Particle' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__CaloCubeDictionary_560_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__CaloCubeDictionary_560_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__CaloCubeDictionary_560_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator' - 0 - first u 'vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__CaloCubeDictionary_560_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<CaloCube::Particle,allocator<CaloCube::Particle> >", 5470, G__CaloCubeDictionary_560_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR(void) {
   /* pair<CaloCube::Ref<CaloCube::Particle>,double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR));
   G__memfunc_setup("pair<CaloCube::Ref<CaloCube::Particle>,double>",4220,G__CaloCubeDictionary_563_0_1, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<CaloCube::Ref<CaloCube::Particle>,double>",4220,G__CaloCubeDictionary_563_0_2, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'CaloCube::Ref<CaloCube::Particle>' - 11 - a d - - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR), -1, 1, 1, 1, 4, 0, "u 'pair<CaloCube::Ref<CaloCube::Particle>,double>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<CaloCube::Ref<CaloCube::Particle>,double>", 4220, G__CaloCubeDictionary_563_0_4, (int) ('i'), 
G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR), -1, 0, 1, 1, 1, 0, "u 'pair<CaloCube::Ref<CaloCube::Particle>,double>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<CaloCube::Ref<CaloCube::Particle>,double>", 4346, G__CaloCubeDictionary_563_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR(void) {
   /* vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR));
   G__memfunc_setup("at",213,G__CaloCubeDictionary_565_0_1, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR), G__defined_typename("vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__CaloCubeDictionary_565_0_2, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR), G__defined_typename("vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__CaloCubeDictionary_565_0_3, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__CaloCubeDictionary_565_0_4, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__CaloCubeDictionary_565_0_5, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__CaloCubeDictionary_565_0_6, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__CaloCubeDictionary_565_0_7, 107, -1, G__defined_typename("vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__CaloCubeDictionary_565_0_8, 107, -1, G__defined_typename("vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__CaloCubeDictionary_565_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__CaloCubeDictionary_565_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type' 0 - sz u 'pair<CaloCube::Ref<CaloCube::Particle>,double>' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__CaloCubeDictionary_565_0_11, 107, -1, G__defined_typename("vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__CaloCubeDictionary_565_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__CaloCubeDictionary_565_0_13, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR), G__defined_typename("vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__CaloCubeDictionary_565_0_14, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR), G__defined_typename("vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >",10412,G__CaloCubeDictionary_565_0_15, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >",10412,G__CaloCubeDictionary_565_0_16, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type' 0 - n u 'pair<CaloCube::Ref<CaloCube::Particle>,double>' - 11 '(pair<CaloCube::Ref<CaloCube::Particle>,double>)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >",10412,G__CaloCubeDictionary_565_0_17, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >",10412,G__CaloCubeDictionary_565_0_18, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator' 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::const_iterator' 10 - first u 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator' 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__CaloCubeDictionary_565_0_19, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__CaloCubeDictionary_565_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__CaloCubeDictionary_565_0_21, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__CaloCubeDictionary_565_0_22, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__CaloCubeDictionary_565_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'pair<CaloCube::Ref<CaloCube::Particle>,double>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__CaloCubeDictionary_565_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__CaloCubeDictionary_565_0_25, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator' - 0 - position u 'pair<CaloCube::Ref<CaloCube::Particle>,double>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__CaloCubeDictionary_565_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator' - 0 - position u 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator' 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::const_iterator' 10 - first "
"u 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator' 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__CaloCubeDictionary_565_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator' - 0 - position k - 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::size_type' 0 - n "
"u 'pair<CaloCube::Ref<CaloCube::Particle>,double>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__CaloCubeDictionary_565_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__CaloCubeDictionary_565_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__CaloCubeDictionary_565_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator' - 0 - first u 'vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__CaloCubeDictionary_565_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >", 10538, G__CaloCubeDictionary_565_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR(void) {
   /* vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR));
   G__memfunc_setup("at",213,G__CaloCubeDictionary_569_0_1, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR), G__defined_typename("vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__CaloCubeDictionary_569_0_2, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR), G__defined_typename("vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__CaloCubeDictionary_569_0_3, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__CaloCubeDictionary_569_0_4, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__CaloCubeDictionary_569_0_5, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__CaloCubeDictionary_569_0_6, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__CaloCubeDictionary_569_0_7, 107, -1, G__defined_typename("vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__CaloCubeDictionary_569_0_8, 107, -1, G__defined_typename("vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__CaloCubeDictionary_569_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__CaloCubeDictionary_569_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type' 0 - sz u 'CaloCube::Ref<CaloCube::Particle>' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__CaloCubeDictionary_569_0_11, 107, -1, G__defined_typename("vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__CaloCubeDictionary_569_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__CaloCubeDictionary_569_0_13, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR), G__defined_typename("vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__CaloCubeDictionary_569_0_14, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR), G__defined_typename("vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >",7954,G__CaloCubeDictionary_569_0_15, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >",7954,G__CaloCubeDictionary_569_0_16, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type' 0 - n u 'CaloCube::Ref<CaloCube::Particle>' - 11 '(CaloCube::Ref<CaloCube::Particle>)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >",7954,G__CaloCubeDictionary_569_0_17, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >",7954,G__CaloCubeDictionary_569_0_18, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator' 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::const_iterator' 10 - first u 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator' 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__CaloCubeDictionary_569_0_19, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__CaloCubeDictionary_569_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__CaloCubeDictionary_569_0_21, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__CaloCubeDictionary_569_0_22, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__CaloCubeDictionary_569_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CaloCube::Ref<CaloCube::Particle>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__CaloCubeDictionary_569_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__CaloCubeDictionary_569_0_25, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator' - 0 - position u 'CaloCube::Ref<CaloCube::Particle>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__CaloCubeDictionary_569_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator' - 0 - position u 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator' 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::const_iterator' 10 - first "
"u 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator' 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__CaloCubeDictionary_569_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator' - 0 - position k - 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::size_type' 0 - n "
"u 'CaloCube::Ref<CaloCube::Particle>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__CaloCubeDictionary_569_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__CaloCubeDictionary_569_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__CaloCubeDictionary_569_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator' - 0 - first u 'vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__CaloCubeDictionary_569_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >", 8080, G__CaloCubeDictionary_569_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR(void) {
   /* vector<CaloCube::Crystal,allocator<CaloCube::Crystal> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR));
   G__memfunc_setup("at",213,G__CaloCubeDictionary_573_0_1, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal), G__defined_typename("vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__CaloCubeDictionary_573_0_2, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal), G__defined_typename("vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__CaloCubeDictionary_573_0_3, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__CaloCubeDictionary_573_0_4, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__CaloCubeDictionary_573_0_5, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgRcLcLiteratorgR), G__defined_typename("vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__CaloCubeDictionary_573_0_6, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgRcLcLiteratorgR), G__defined_typename("vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__CaloCubeDictionary_573_0_7, 107, -1, G__defined_typename("vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__CaloCubeDictionary_573_0_8, 107, -1, G__defined_typename("vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__CaloCubeDictionary_573_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__CaloCubeDictionary_573_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type' 0 - sz u 'CaloCube::Crystal' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__CaloCubeDictionary_573_0_11, 107, -1, G__defined_typename("vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__CaloCubeDictionary_573_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__CaloCubeDictionary_573_0_13, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal), G__defined_typename("vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__CaloCubeDictionary_573_0_14, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal), G__defined_typename("vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >",5180,G__CaloCubeDictionary_573_0_15, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >",5180,G__CaloCubeDictionary_573_0_16, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type' 0 - n u 'CaloCube::Crystal' - 11 'CaloCube::Crystal()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >",5180,G__CaloCubeDictionary_573_0_17, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >",5180,G__CaloCubeDictionary_573_0_18, 105, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator' 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::const_iterator' 10 - first u 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator' 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__CaloCubeDictionary_573_0_19, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__CaloCubeDictionary_573_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__CaloCubeDictionary_573_0_21, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__CaloCubeDictionary_573_0_22, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__CaloCubeDictionary_573_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CaloCube::Crystal' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__CaloCubeDictionary_573_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__CaloCubeDictionary_573_0_25, 117, G__get_linked_tagnum(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator' - 0 - position u 'CaloCube::Crystal' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__CaloCubeDictionary_573_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator' - 0 - position u 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator' 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::const_iterator' 10 - first "
"u 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator' 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__CaloCubeDictionary_573_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator' - 0 - position k - 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::size_type' 0 - n "
"u 'CaloCube::Crystal' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__CaloCubeDictionary_573_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__CaloCubeDictionary_573_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__CaloCubeDictionary_573_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator' - 0 - first u 'vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__CaloCubeDictionary_573_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >", 5306, G__CaloCubeDictionary_573_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncCaloCubeDictionary() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalCaloCubeDictionary() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcCaloCubeDictionary() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__CaloCubeDictionaryLN_basic_istreamlEcharcOchar_traitslEchargRsPgR = { "basic_istream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_complexlEdoublegR = { "complex<double>" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_CLHEP = { "CLHEP" , 110 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_CLHEPcLcLHepRotation = { "CLHEP::HepRotation" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_CLHEPcLcLHepEulerAngles = { "CLHEP::HepEulerAngles" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_CLHEPcLcLHepAxisAngle = { "CLHEP::HepAxisAngle" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector = { "CLHEP::Hep3Vector" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_CLHEPcLcLHep3VectorcLcLdA = { "CLHEP::Hep3Vector::$" , 101 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_CaloCube = { "CaloCube" , 110 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_CaloCubecLcLPosition = { "CaloCube::Position" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_G4Track = { "G4Track" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_CaloCubecLcLParticle = { "CaloCube::Particle" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_exception = { "exception" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_CaloCubecLcLException = { "CaloCube::Exception" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_CaloCubecLcLGlobalEvent = { "CaloCube::GlobalEvent" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_CaloCubecLcLCrystal = { "CaloCube::Crystal" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR = { "CaloCube::Ref<CaloCube::Particle>" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR = { "vector<CaloCube::Particle,allocator<CaloCube::Particle> >" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgRcLcLiterator = { "vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CaloCube::Particle,allocator<CaloCube::Particle> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR = { "pair<CaloCube::Ref<CaloCube::Particle>,double>" , 115 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR = { "vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgRcLcLiterator = { "vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR = { "vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgRcLcLiterator = { "vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR = { "vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgRcLcLiterator = { "vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator" , 99 , -1 };
G__linked_taginfo G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableCaloCubeDictionary() {
  G__CaloCubeDictionaryLN_basic_istreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__CaloCubeDictionaryLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__CaloCubeDictionaryLN_string.tagnum = -1 ;
  G__CaloCubeDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CaloCubeDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CaloCubeDictionaryLN_complexlEdoublegR.tagnum = -1 ;
  G__CaloCubeDictionaryLN_CLHEP.tagnum = -1 ;
  G__CaloCubeDictionaryLN_CLHEPcLcLHepRotation.tagnum = -1 ;
  G__CaloCubeDictionaryLN_CLHEPcLcLHepEulerAngles.tagnum = -1 ;
  G__CaloCubeDictionaryLN_CLHEPcLcLHepAxisAngle.tagnum = -1 ;
  G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector.tagnum = -1 ;
  G__CaloCubeDictionaryLN_CLHEPcLcLHep3VectorcLcLdA.tagnum = -1 ;
  G__CaloCubeDictionaryLN_CaloCube.tagnum = -1 ;
  G__CaloCubeDictionaryLN_CaloCubecLcLPosition.tagnum = -1 ;
  G__CaloCubeDictionaryLN_G4Track.tagnum = -1 ;
  G__CaloCubeDictionaryLN_CaloCubecLcLParticle.tagnum = -1 ;
  G__CaloCubeDictionaryLN_exception.tagnum = -1 ;
  G__CaloCubeDictionaryLN_CaloCubecLcLException.tagnum = -1 ;
  G__CaloCubeDictionaryLN_CaloCubecLcLGlobalEvent.tagnum = -1 ;
  G__CaloCubeDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__CaloCubeDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__CaloCubeDictionaryLN_CaloCubecLcLCrystal.tagnum = -1 ;
  G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR.tagnum = -1 ;
  G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR.tagnum = -1 ;
  G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgRcLcLiterator.tagnum = -1 ;
  G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR.tagnum = -1 ;
  G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR.tagnum = -1 ;
  G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR.tagnum = -1 ;
  G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgRcLcLiterator.tagnum = -1 ;
  G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableCaloCubeDictionary() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_basic_istreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_string);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_complexlEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_CLHEP),0,-1,0,(char*)NULL,G__setup_memvarCLHEP,G__setup_memfuncCLHEP);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_CLHEPcLcLHepRotation);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_CLHEPcLcLHepEulerAngles);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_CLHEPcLcLHepAxisAngle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3Vector),sizeof(CLHEP::Hep3Vector),-1,298752,(char*)NULL,G__setup_memvarCLHEPcLcLHep3Vector,G__setup_memfuncCLHEPcLcLHep3Vector);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_CLHEPcLcLHep3VectorcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_CaloCube),0,-1,0,(char*)NULL,G__setup_memvarCaloCube,G__setup_memfuncCaloCube);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_CaloCubecLcLPosition),sizeof(CaloCube::Position),-1,295168,(char*)NULL,G__setup_memvarCaloCubecLcLPosition,G__setup_memfuncCaloCubecLcLPosition);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_G4Track);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_CaloCubecLcLParticle),sizeof(CaloCube::Particle),-1,295168,(char*)NULL,G__setup_memvarCaloCubecLcLParticle,G__setup_memfuncCaloCubecLcLParticle);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_exception);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_CaloCubecLcLException),sizeof(CaloCube::Exception),-1,295936,(char*)NULL,G__setup_memvarCaloCubecLcLException,G__setup_memfuncCaloCubecLcLException);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_CaloCubecLcLGlobalEvent),sizeof(CaloCube::GlobalEvent),-1,262144,(char*)NULL,G__setup_memvarCaloCubecLcLGlobalEvent,G__setup_memfuncCaloCubecLcLGlobalEvent);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_CaloCubecLcLCrystal),sizeof(CaloCube::Crystal),-1,295168,(char*)NULL,G__setup_memvarCaloCubecLcLCrystal,G__setup_memfuncCaloCubecLcLCrystal);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_CaloCubecLcLReflECaloCubecLcLParticlegR),sizeof(CaloCube::Ref<CaloCube::Particle>),-1,295168,(char*)NULL,G__setup_memvarCaloCubecLcLReflECaloCubecLcLParticlegR,G__setup_memfuncCaloCubecLcLReflECaloCubecLcLParticlegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR),sizeof(vector<CaloCube::Particle,allocator<CaloCube::Particle> >),-1,298752,(char*)NULL,G__setup_memvarvectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR,G__setup_memfuncvectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLParticlecOallocatorlECaloCubecLcLParticlegRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_pairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR),sizeof(pair<CaloCube::Ref<CaloCube::Particle>,double>),-1,297216,(char*)NULL,G__setup_memvarpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR,G__setup_memfuncpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR),sizeof(vector<pair<CaloCube::Ref<CaloCube::Particle>,double>,allocator<pair<CaloCube::Ref<CaloCube::Particle>,double> > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR,G__setup_memfuncvectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_vectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRcOallocatorlEpairlECaloCubecLcLReflECaloCubecLcLParticlegRcOdoublegRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR),sizeof(vector<CaloCube::Ref<CaloCube::Particle>,allocator<CaloCube::Ref<CaloCube::Particle> > >),-1,298752,(char*)NULL,G__setup_memvarvectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR,G__setup_memfuncvectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLReflECaloCubecLcLParticlegRcOallocatorlECaloCubecLcLReflECaloCubecLcLParticlegRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR),sizeof(vector<CaloCube::Crystal,allocator<CaloCube::Crystal> >),-1,298752,(char*)NULL,G__setup_memvarvectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR,G__setup_memfuncvectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgR);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_vectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__CaloCubeDictionaryLN_reverse_iteratorlEvectorlECaloCubecLcLCrystalcOallocatorlECaloCubecLcLCrystalgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupCaloCubeDictionary(void) {
  G__check_setup_version(30051515,"G__cpp_setupCaloCubeDictionary()");
  G__set_cpp_environmentCaloCubeDictionary();
  G__cpp_setup_tagtableCaloCubeDictionary();

  G__cpp_setup_inheritanceCaloCubeDictionary();

  G__cpp_setup_typetableCaloCubeDictionary();

  G__cpp_setup_memvarCaloCubeDictionary();

  G__cpp_setup_memfuncCaloCubeDictionary();
  G__cpp_setup_globalCaloCubeDictionary();
  G__cpp_setup_funcCaloCubeDictionary();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncCaloCubeDictionary();
  return;
}
class G__cpp_setup_initCaloCubeDictionary {
  public:
    G__cpp_setup_initCaloCubeDictionary() { G__add_setup_func("CaloCubeDictionary",(G__incsetup)(&G__cpp_setupCaloCubeDictionary)); G__call_setup_funcs(); }
   ~G__cpp_setup_initCaloCubeDictionary() { G__remove_setup_func("CaloCubeDictionary"); }
};
G__cpp_setup_initCaloCubeDictionary G__cpp_setup_initializerCaloCubeDictionary;

